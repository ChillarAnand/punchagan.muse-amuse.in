<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Noetic Nought (blab)</title><link>https://punchagan.muse-amuse.in/</link><description></description><atom:link href="https://punchagan.muse-amuse.in/tags/blab.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 14 Jun 2016 17:56:04 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Assist time</title><link>https://punchagan.muse-amuse.in/posts/assist-time.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I sometimes hang out on &lt;a href="http://webchat.freenode.net/?channels=%2523org-mode"&gt;#org-mode&lt;/a&gt; or &lt;a href="http://webchat.freenode.net/?channels=%2523nikola"&gt;#nikola&lt;/a&gt; and answer questions. I usually am
not able to answer off the top of my head and I look up docs or dig through the
code.  Sometimes, we find ready-made documented answers, but other times we end
up contributing some documentation, filing an issue, submitting a patch or
hacking up something for that super-special use-case.
&lt;/p&gt;

&lt;p&gt;
Until now, I looked at this time as IRC time, which loosely translates to
distraction time.  But, I'm usually learning about the tools I use a little bit
more. Even when I'm not, I'm helping someone do something they want to do.
Sometimes empowering them to fix future problems on their own.  And indirectly
making the user community a wee-bit happier, and possibly the software a tiny
bit better.
&lt;/p&gt;

&lt;p&gt;
This isn't limited just to helping someone on IRC.  Helping out a co-worker do
something that they are new to, or just adding a comment or editing a
Stack-overflow answer may end up in the "distraction time" bin, just because
you weren't doing something on your TODO list.  It needn't be.
&lt;/p&gt;

&lt;p&gt;
Taking cue from &lt;a href="https://en.wikipedia.org/wiki/Assist_(football)"&gt;scorers in Football&lt;/a&gt;, I decided to call this time &lt;b&gt;assist time&lt;/b&gt;
and to try to start seeing this time as (semi-)productive. Naming helps.
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>productivity</category><category>programming</category><category>time</category><guid>https://punchagan.muse-amuse.in/posts/assist-time.html</guid><pubDate>Tue, 14 Jun 2016 14:28:56 GMT</pubDate></item><item><title>Effortful things</title><link>https://punchagan.muse-amuse.in/posts/effortful-things.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
That dense book you want to read but has been lying on your desk while you
procrastinate on twitter. You know you'll have to tune everything else out,
and read slowly, word by word, trying to understand and make sense.
&lt;/p&gt;

&lt;p&gt;
That vague blog post idea swirling in your head while you look at cat pictures,
one after another. Distilling your thoughts and putting them down for general
consumption is a lot of thinking and effort away.
&lt;/p&gt;

&lt;p&gt;
That &lt;code&gt;${cool_programming_thing}&lt;/code&gt; that a talk got you excited about so long ago.
But, watching talks and intending to start using it is all you do about it. You
know its going to take a fair amount of reading, thinking and time, before you
can really use it well.
&lt;/p&gt;

&lt;p&gt;
Like all those squats and lifts you dread, these things are building your
muscle. The thing about building muscle – it needs effort and feels like so
much hard work.
&lt;/p&gt;

&lt;p&gt;
You can't build muscles effortlessly. Go do those effortful things! Only if you
care about those muscles, anyway.
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>learning</category><category>life</category><guid>https://punchagan.muse-amuse.in/posts/effortful-things.html</guid><pubDate>Sat, 11 Jun 2016 10:13:19 GMT</pubDate></item><item><title>Stepping AFK</title><link>https://punchagan.muse-amuse.in/posts/stepping-afk.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
In the past few weeks, I noticed three instances where I was forced to take a
break exactly when I was ready to jump in and write some code to fix a bug or
add a small feature.  I had to step out of the house and take a walk to meet
someone, etc.
&lt;/p&gt;

&lt;p&gt;
I ended up getting ideas during the walks, which significantly changed and
simplified how I would've implemented things, if not for those breaks.  Even if
I did end up zeroing down to those solutions, I am pretty sure it would've
taken a couple of not-so-good attempts and much longer than it did.
&lt;/p&gt;

&lt;p&gt;
Context switches are usually considered to be &lt;a href="http://heeris.id.au/2013/this-is-why-you-shouldnt-interrupt-a-programmer/"&gt;expensive for programmers&lt;/a&gt;, but
taking a break at the exact time when I had all the required context loaded
into my head seemed to help. It was also probably helpful that I was taking a
walk, and there wasn't really any other inputs or outputs competing for the
space in my head.
&lt;/p&gt;

&lt;p&gt;
This got me thinking about doing this more deliberately – I'd love to hear
about any experiences or any experiments any of you have done with this.  Also,
I'm reminded of Rich Hickey's &lt;a href="https://www.youtube.com/watch?v=f84n5oFoZBc"&gt;Hammock Driven Development&lt;/a&gt; talk and I wonder if
this is a smaller/different version of it, and makes me want to try out the
things he suggests more deliberately.  If any of you has thoughts and
suggestions, I'd love to hear from you!
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>programming</category><category>thought</category><guid>https://punchagan.muse-amuse.in/posts/stepping-afk.html</guid><pubDate>Fri, 03 Jun 2016 18:21:30 GMT</pubDate></item><item><title>PyCon India 2016 - Propose a talk</title><link>https://punchagan.muse-amuse.in/posts/pycon-india-2016-propose-a-talk.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
CFP for PyCon 2016 is &lt;a href="https://in.pycon.org/cfp/2016/proposals/"&gt;open&lt;/a&gt; and you should propose a talk!
&lt;/p&gt;

&lt;p&gt;
There has been a lot of discussion on trying to improve the talk quality at the
events. As my bit of contribution to this, below is a re-hash of some good
advice from the internet on why you should give a talk, and how to submit a
good proposal.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Why?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;You &lt;a href="https://vimeo.com/96692937#t=2m56s"&gt;needn't be an expert&lt;/a&gt; on a topic. If you have enough experience about
something to help make the next person's experience with it better, you are
good.
&lt;/li&gt;

&lt;li&gt;Its a great way to find people who are interested in the same things as you
are and to get to talk to them.  If you are an introvert, you should
&lt;a href="https://emptysqua.re/blog/tech-talks-are-campfires-jesses-three-reasons-you-should-speak-at-pycon/#meet-specialists"&gt;definitely be speaking&lt;/a&gt;!
&lt;/li&gt;

&lt;li&gt;Proposing and giving a talk is about thinking about something hard enough to
refine your thoughts, and being able to explain it to others. Its a useful
skill to hone.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;How?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Talks are &lt;a href="http://speaking.io/plan/talks-are-entertainment/"&gt;entertainment&lt;/a&gt;. Pick a topic that you are excited about and fascinated
by. Let it be a general topic that will have a significant number of people
interested in it.
&lt;/li&gt;

&lt;li&gt;What you want the attendees to be telling their friends about your talk,
after they go back.  Make it the &lt;a href="http://blog.briancurtin.com/posts/writing-a-pycon-proposal.html"&gt;objective&lt;/a&gt; of your talk.
&lt;/li&gt;

&lt;li&gt;Submit a complete, clear and compelling proposal. Show the reviewers that you
are willing to put in the effort to prepare for and to give a great
talk. Here are a &lt;a href="https://github.com/akaptur/pycon-proposals/tree/master/accepted"&gt;bunch of proposals&lt;/a&gt; to see and learn from.
&lt;/li&gt;

&lt;li&gt;Submit an outline along with your talk. Show the talk can be delivered in the
given time and will be interesting. Include an indication of how much &lt;a href="https://github.com/akaptur/pycon-proposals/blob/master/accepted/important_decisions_kaptur_2014.md#outline"&gt;time&lt;/a&gt;
you intend to spend on each part of your talk.
&lt;/li&gt;

&lt;li&gt;Choose a good title.  The title is what catches the attention of your
audience when they are trying to pick a talk.  Avoid buzz words.
&lt;/li&gt;

&lt;li&gt;Get feedback. Like any writing, feedback can be helpful at all stages –
brainstorm while choosing topics to getting critique on the full abstract.
&lt;/li&gt;

&lt;li&gt;Convince the reviewers that you can give a &lt;a href="https://emptysqua.re/blog/seven-tips-for-pycon/#note-to-the-organizers"&gt;well-rehearsed and entertaining&lt;/a&gt; –
link to previous talks you've given, include links to any testimonials you've
received from your audience, etc.  If you don't have a previously recorded
talk, give a small talk to your friends or colleagues and have it recorded.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;References&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;PyCon US has some &lt;a href="https://us.pycon.org/2016/speaking/talks/"&gt;good advice&lt;/a&gt; on how to submit a proposal and most of it is
generic enough for you to use for PyCon India, or any other conference.
&lt;/li&gt;

&lt;li&gt;These posts (&lt;a href="https://emptysqua.re/blog/tech-talks-are-campfires-jesses-three-reasons-you-should-speak-at-pycon/"&gt;1&lt;/a&gt; &lt;a href="https://emptysqua.re/blog/seven-tips-for-pycon/"&gt;2&lt;/a&gt; and &lt;a href="https://emptysqua.re/blog/tag/conference-tips/"&gt;more&lt;/a&gt;) by Jesse Davis are so so good!
&lt;/li&gt;

&lt;li&gt;I also liked &lt;a href="https://vimeo.com/96692937"&gt;"The Talk on Talks"&lt;/a&gt; by Zach Holman.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>advice</category><category>blab</category><category>blag</category><category>conference</category><category>pycon</category><category>talks</category><guid>https://punchagan.muse-amuse.in/posts/pycon-india-2016-propose-a-talk.html</guid><pubDate>Tue, 31 May 2016 10:10:43 GMT</pubDate></item><item><title>Thinking about Data Ethics</title><link>https://punchagan.muse-amuse.in/posts/thinking-about-data-ethics.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Earlier this month, a researcher made a dataset containing the profiles of about
70,000 users public. He didn't really see a problem in doing this because he
felt he was only presenting &lt;a href="https://twitter.com/KirkegaardEmil/status/730449904909324289"&gt;already publicly available&lt;/a&gt; data in a more usable
form. was only presenting it in a more usable form.
&lt;/p&gt;

&lt;p&gt;
Yesterday, I came across this quote in the very first chapter of &lt;a href="https://twitter.com/allendowney"&gt;Allen Downey&lt;/a&gt;'s
book &lt;a href="http://greenteapress.com/thinkstats2/index.html"&gt;Think Stats&lt;/a&gt; which I liked a lot, and reminded me of this incident.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://c2.staticflickr.com/8/7193/26969166130_58e4865f47_b.jpg" alt="26969166130_58e4865f47_b.jpg"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I hadn't looked at the OKCupid data release and the discussion around it much,
but I went back and read &lt;a href="https://points.datasociety.net/okcupid-data-release-fiasco-ba0388348cd#.u8xxlkqsv"&gt;this article&lt;/a&gt; by a social media researcher who thinks a
lot about these things. 
&lt;/p&gt;

&lt;p&gt;
She puts forth a lot of interesting ideas to think about ethics. Some things
that stood out to me are:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Ask yourself how the person whose data you are using feels about the data.
&lt;/li&gt;
&lt;li&gt;Taking a 'what if' impact approach to thinking about data and ethics.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Also, you needn't really call yourself a researcher to be actually doing
experiments with (or &lt;a href="http://www.npr.org/2016/05/17/478266839/this-is-your-brain-on-uber"&gt;analyzing&lt;/a&gt;) "big-data" and discovering and putting out facts
that have an impact – however big or small. You should really go read the
article, whether or not you are a researcher using data.
&lt;/p&gt;

&lt;p&gt;
Incidentally, there is a meet-up on &lt;a href="http://www.meetup.com/DataKind-Bangalore/events/231310093/"&gt;Data Ethics&lt;/a&gt; this weekend in Bangalore. I'm
excited to learn and think more about this, and talk to others who care.
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>data</category><category>ethics</category><category>programming</category><guid>https://punchagan.muse-amuse.in/posts/thinking-about-data-ethics.html</guid><pubDate>Wed, 25 May 2016 15:36:56 GMT</pubDate></item><item><title>Level-up Tools</title><link>https://punchagan.muse-amuse.in/posts/level-up-tools.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Thanks to a &lt;a href="https://twitter.com/baali_"&gt;friend&lt;/a&gt; I got an upgrade to our still-being-setup kitchen.  I now
have a non-stick pan along with a few more new additions.  I would previously
use a bowl that people usually use to boil &lt;a href="http://img6a.flixcart.com/image/pot-pan/t/s/8/aluminium-polish-top-jk-vallabhdas-400x400-imae7w9y9ehukjhx.jpeg"&gt;milk&lt;/a&gt; etc. for making whatever I did.
The non-stick pan feels so great!  It has made it a lot simpler to make some of
the things I used to, because its non-stick. And it has vastly expanded the
possibilities of things I can make, by virtue of being flat and wide based.
The pan is such a great addition to my kitchen paraphernalia, and it adds a new
dimension to the kind of things I can make.  I'm not here to write a user
review for it, though.
&lt;/p&gt;

&lt;p&gt;
What are such tools in other things that you do, that drastically changed the
way you did something, or added a new dimension to the kinds of things you
could do, tools that make you feel like you have a new super-power?  Learning
to write Python (after starting off with C) seemed to give me so much power
allowing me to focus on the problem, rather than fussing over the low level
details. Sasha mentions in &lt;a href="http://sasha.wtf/anki-post-1/"&gt;this post&lt;/a&gt; how using a Spaced Repetition System like
&lt;a href="https://ankiweb.net/"&gt;Anki&lt;/a&gt; drastically improved her efficiency because she could focus on thinking
about higher level things rather than trying to recall or search for what
method or function to use to do something.
&lt;/p&gt;

&lt;p&gt;
What are some such level-up tools for you? Is there a systematic approach to
discovering tools?
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>learning</category><category>life</category><category>programming</category><guid>https://punchagan.muse-amuse.in/posts/level-up-tools.html</guid><pubDate>Mon, 23 May 2016 16:08:14 GMT</pubDate></item><item><title>blog-admin and Nikola</title><link>https://punchagan.muse-amuse.in/posts/blog-admin-and-nikola.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Another post about blogging.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/CodeFalling/blog-admin"&gt;blog-admin&lt;/a&gt; now supports &lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt;, thanks to yours truly. &lt;code&gt;blog-admin&lt;/code&gt; is an Emacs
package by &lt;a href="https://twitter.com/codefalling"&gt;CodeFalling&lt;/a&gt; that lets you view and manage your (static site
generated) blog from within inside Emacs.
&lt;/p&gt;

&lt;p&gt;
Nikola's command line utility is pretty nifty and does a bunch of useful
things. I had a few utility functions to do common tasks like create new post
and deploy blog. This worked well, but moment I came across this &lt;code&gt;blog-admin&lt;/code&gt;'s
tabular view, I was sold!
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/punchagan/org2blog"&gt;org2blog&lt;/a&gt; (a blogging tool I used previously) had a tracking file that kept
track of all the posts I made, and I used it quite a bit for navigation –
thanks to &lt;code&gt;org-mode&lt;/code&gt;'s search functionality. The tabular view of &lt;code&gt;blog-admin&lt;/code&gt;
is even better!  I really like the fact that the author has tried to keep the
package generic enough to support any blog, and adding support for Nikola has
been quite easy.
&lt;/p&gt;

&lt;p&gt;
The filtering functionality is crude, but good enough for a start. One thing I
want to add is a preview functionality for drafts. Showing some (writing)
statistics would also be nice – No. posts in the last month, total published
posts, etc.  No promises, but you may see some of these things, soon. :)
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>blog</category><category>emacs</category><category>nikola</category><guid>https://punchagan.muse-amuse.in/posts/blog-admin-and-nikola.html</guid><pubDate>Sat, 21 May 2016 14:58:07 GMT</pubDate></item><item><title>Tedium in work-flows</title><link>https://punchagan.muse-amuse.in/posts/tedium-in-work-flows.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I use &lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt; for generating this blog. When creating a new post, it prompts for
a title, and creates a file for the post.
&lt;/p&gt;

&lt;p&gt;
Often I'm starting off with only a vague idea that needs to be fleshed out
before it can be published (or discarded). It is quite difficult to come up
with a title at this stage. I just want to start a draft and write things down!
&lt;/p&gt;

&lt;p&gt;
I could use a "draft-title" and change it after finishing a post, but this
feels tedious – requires 3 steps – change the title, post filename and post
slug.  The last two steps are optional, really, but I feel they are important
especially when the original title is very different from the new one.
&lt;/p&gt;

&lt;p&gt;
Being forced to come up with a title before anything else, feels tedious and,
adds to the effort required to start off a new post.  I shouldn't really be
worrying about the effort required to change the title of an unwritten post,
but it happens subconsciously.
&lt;/p&gt;

&lt;p&gt;
To work around this, I now have a "re-title utility" in my editor that takes
care of all the tedious details.  I can start with a random title, like
Draft-1, and change it when I'm done with the post.  I feel this is going to
lead to a lot more drafts, at the very least, if not published posts.
&lt;/p&gt;

&lt;p&gt;
Another work-flow related thing I came across recently was @Malabarba's &lt;a href="https://github.com/clojure-emacs/cider/issues/1717#issue-150907043"&gt;issue&lt;/a&gt;
on CIDER (an IDE for Clojure in Emacs).  The &lt;a href="http://www.braveclojure.com/getting-started/#Using_the_REPL"&gt;REPL&lt;/a&gt; takes a while to startup and
this caused him to not use CIDER for running tests, if there wasn't an already
open REPL.
&lt;/p&gt;

&lt;p&gt;
The tedium that people feel effects how they use the tool.  Not surprisingly,
making tedious-feeling tasks a breeze with the tool also effects how and how
much they use it.  Subtle variations in a work-flow could make or break it.
How do you discover such potential work-flow make-or-break-ers? I think, these
things would help:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Use the tool yourself (dog-food)
&lt;/li&gt;
&lt;li&gt;Talk to (or watch!) people using your tool
&lt;/li&gt;
&lt;li&gt;Look at work-flows in other similar tools
&lt;/li&gt;
&lt;li&gt;Thinking explicitly about various scenarios and simplifying or improving
work-flows
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I'd love to hear examples of this, and any ideas or thoughts you may have on
identifying and fixing such things!
&lt;/p&gt;</description><category>blab</category><category>programming</category><category>user-experience</category><category>workflow</category><guid>https://punchagan.muse-amuse.in/posts/tedium-in-work-flows.html</guid><pubDate>Thu, 19 May 2016 11:13:37 GMT</pubDate></item><item><title>Error messages and new users</title><link>https://punchagan.muse-amuse.in/posts/error-messages-and-new-users.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I was helping a friend of mine setup &lt;a href="http://jajoosam.github.io"&gt;his blog&lt;/a&gt; and we were trying to use &lt;a href="http://hexo.io"&gt;Hexo&lt;/a&gt; –
a static site generator.  We chose a Javascript based tool since he's trying to
learn Javascript.  I skimmed through active Javascript projects in &lt;a href="https://staticsitegenerators.net"&gt;this list&lt;/a&gt;
and finally zeroed down upon Hexo based on its popularity.  I promised to help
my friend to set this up, but he first tried to do it on his own and got back
to me after an hour or so, quite frustrated and almost on the verge of giving
up setting it up.  I didn't expect this from a tool that had so many stars,
forks, plugins and so much active development.
&lt;/p&gt;

&lt;p&gt;
We finally got it working, but we found that the error messages were horrendous
– even for someone who has been using free and open-source tools for a while
now.  Printing out errors from compiler or interpreter directly along with the
stack trace is almost always the worst thing to do for a tool/utility (as
opposed to an API or library).  The stack trace is definitely useful, for
developers trying to build upon or improve your tool.  Have a debug or
development mode where developers can get all the information they need.
&lt;/p&gt;

&lt;p&gt;
If you care about your users, especially new users, make sure you spend
sufficient time on showing human-readable messages. If possible list the
possible causes for every error along with tips for troubleshooting.
&lt;/p&gt;</description><category>blab</category><category>programming</category><category>software</category><category>user-experience</category><guid>https://punchagan.muse-amuse.in/posts/error-messages-and-new-users.html</guid><pubDate>Tue, 17 May 2016 07:22:36 GMT</pubDate></item><item><title>Cold</title><link>https://punchagan.muse-amuse.in/posts/cold.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
It was a pleasant Saturday evening in the middle of the winter. Christmas was
just round the corner and love in the air. The sun was just setting and
everything outside his window was given a fresh coat of snow, tickled by the
red, quickly fading light. Not that he noticed. He stared blankly out of the
window, looking at nothing in particular. He had just woken up from his
afternoon nap; but he'd buy it if you told him he'd been sleeping for a year…
&lt;/p&gt;

&lt;p&gt;
You could see the icy river crawling ahead, from his window.  People walking
over the bridge, a few camera flashes going off, people stopping over and
looking far ahead into the horizon – collecting their thoughts, couples
walking hand-in-hand enjoying each others' company; You could see it all, from
up there! But, as they say, you only see what you look for. And he, couldn't
see any of this. His looked out of his window and saw none of this.
&lt;/p&gt;

&lt;p&gt;
He is walking down the same bridge. He didn't know where he was going; his head
at least. His legs did; as always. He was walking down in his regular yellow
shirt and black jeans, that you could mistake for a uniform, if you followed
him for a few days. Extremely under-dressed for the chilly night, one would
say. He kept walking down the main street, lined with shops brightly lit up for
the festive season. The pavement bustled with with people walking with a spring
in their step – the spring that the festive season and all the love in the air
brought to you. Not that he noticed it, or had any of it in his step.
&lt;/p&gt;

&lt;p&gt;
Soon, he's walking through the park. The park that was built to celebrate time,
ticking away furiously. Or to celebrate the time everyone in the world had, to
enjoy themselves. He walked past the skating rink, with lots of people having
the time of their life, ice skating; and a lot more, awaiting their turn. The
first timers, old and young, making up for their inexperience, with their
excitement; holding onto whatever they can, to finish each round, to start the
next! The veterans, taking the center-stage and showing off their moves!  He
was barely aware of their presence and just walked on, past all the action.
&lt;/p&gt;

&lt;p&gt;
The music festival; he walked past it too, like the crowd didn't exist, the
noise didn't, the music didn't; like there was nothing happening! The fountain
"felt" no different. The cold breeze, did sprinkle the water to quite a
distance and everybody kept a safe distance to avoid the chilling shower,
except for the kids, who found it amusing to run into the shower for a split
second and run back madly. How could he walk just by it, and not feel a thing!
&lt;/p&gt;

&lt;p&gt;
The lakefront. That is where his legs always brought him in the end. The
brilliantly lit skyline was a delight to watch, but I don't believe he saw any
of it. He just stared into it, blankly. He kept staring, as the night got
chillier and the surroundings kept getting more and more deserted. Seconds
ticked away, minutes and hours passed by! He stayed on, staring ahead. It
didn't matter how much below zero the mercury had gone. This wasn't the first
night he was spending staring into the nothingness. It turned out to be the
coldest night, in a decade. But that didn't matter to him. Nothing did. Nothing
has, for a while now; Ever since he turned cold.
&lt;/p&gt;</description><category>blab</category><category>cold</category><category>fiction</category><category>life</category><category>story</category><guid>https://punchagan.muse-amuse.in/posts/cold.html</guid><pubDate>Tue, 12 Nov 2013 19:33:45 GMT</pubDate></item></channel></rss>