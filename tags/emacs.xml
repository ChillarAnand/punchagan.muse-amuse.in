<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Noetic Nought (emacs)</title><link>http://punchagan.muse-amuse.in/</link><description></description><atom:link href="http://punchagan.muse-amuse.in/tags/emacs.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 04 Nov 2014 23:12:13 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>More input sources for org-drill</title><link>http://punchagan.muse-amuse.in/posts/more-input-sources-for-org-drill.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I've been trying to use &lt;code&gt;org-drill&lt;/code&gt; regularly for the last few weeks.  I don't
know how well it's been going but I have been sticking to the routine
religiously.  I haven't yet really tried out incremental reading, but in an
attempt to make it as easy as possible, I wanted to have a pdf-reader
integration, and some kind of integration with Kindle highlights.  Browser
integration is pretty straight-forward, thanks to some &lt;a href="http://orgmode.org/worg/org-contrib/org-protocol.html#sec-6"&gt;simple java-script&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I looked for a pdf-reader with some sort of plugin support, but I found nothing
in Evince or Okular.  I thought about &lt;code&gt;pdfjs&lt;/code&gt; but it seemed slightly clunky to
open pdfs in a browser, though I might shift to this if I don't like what I
finally ended up with.  Good old &lt;code&gt;xpdf&lt;/code&gt; seemed to be the only pdf reader that
had some support for custom keybindings that allowed users to run external
commands.  With a &lt;a href="https://github.com/punchagan/dot-emacs/blob/master/xpdf-capture"&gt;little Python&lt;/a&gt;, I was able to setup a work-flow to capture
snippets from &lt;code&gt;xpdf&lt;/code&gt;, to add to org-drill. Custom key-bindings somehow don't
seem to work on &lt;code&gt;xpdf&lt;/code&gt; bundled on Ubuntu. So, I ended up downloading and using
the binary available on the xpdf site.
&lt;/p&gt;

&lt;p&gt;
For Kindle highlights support, with minor updates to Thamer Mahmoud's &lt;a href="https://github.com/punchagan/clip2org"&gt;clip2org&lt;/a&gt;,
I have a simple way of getting all the "new" clippings/highlights as org-drill
headlines.  I haven't really started using this, and once I do, I may end-up
automating even the merging of these items into the org-drill notes file.  I'm
looking forward to making better use of my Kindle, with this feature!
&lt;/p&gt;

&lt;p&gt;
I don't know if it would be useful to have more context information like
section titles/chapter titles when capturing from html/pdf, but it seems like
an interesting problem to try to solve.
&lt;/p&gt;

&lt;p&gt;
Also, it might be easier(?) if I probably tried to have a DE level keybinding, and
some code to get selection and file name of the currently active
window/application.
&lt;/p&gt;</description><category>emacs</category><category>hack</category><category>learning</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/more-input-sources-for-org-drill.html</guid><pubDate>Tue, 04 Nov 2014 01:55:04 GMT</pubDate></item><item><title>Org-mode Workshop</title><link>http://punchagan.muse-amuse.in/posts/org-mode-workshop.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Well, I'm not sure if it's worth writing about.  I conducted my
first org-mode workshop along with Prof. Venkatesh Choppella at
IIIT-Hyderabad.  It was a 3 hour demo+talk kind of a thing, with a
small audience of about 20 people, most of whom were new to
Emacs.
&lt;/p&gt;

&lt;p&gt;
We covered almost all the aspects of Org-mode after giving a brief
introduction to Emacs.  Outlining and note-taking part was simple
and easy to understand, but the audience couldn't really
appreciate the part of keeping TODO lists and agendas and other
stuff.  I'm hoping, the reason was not me taking over from
Venkatesh.
&lt;/p&gt;

&lt;p&gt;
I think the workshop should've been more hands-on and we should've
asked people to try out stuff on the spot, instead of showing off
the things possible with Emacs.  They probably would've
appreciated a few things better, that way.
&lt;/p&gt;

&lt;p&gt;
Hopefully, we will be doing more workshops on Org-mode and there
are surely somethings to take away from this one.  I hope at least
one of the participants, gets hooked to Org-mode.
&lt;/p&gt;

&lt;p&gt;
The talk outline is here.
&lt;/p&gt;</description><category>emacs</category><category>hyderabad</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/org-mode-workshop.html</guid><pubDate>Wed, 22 Jun 2011 15:34:00 GMT</pubDate></item><item><title>Git powered wikis improved: My bit</title><link>http://punchagan.muse-amuse.in/posts/git-powered-wikis-improved-my-bit.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I accidentally came across the blog-post Git-powered wikis
improved - GitHub. And this particular paragraph caught my
eye:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
The new editor has the capability to support every markup
language that GitHub Wikis support. If you're a fan of Markdown,
Textile, pod or RDoc, the function bar buttons (e.g. bold,
italic, underline, etc.) will now work. We've even written brand
new inline help for many of GitHub Wiki's supported markup
languages.
&lt;/p&gt;

&lt;p&gt;
The language definitions the editor uses are JSON-based and easy
to edit. If you'd like us to support a markup language that we
don't currently support, Gollum, GitHub's wiki software, is
entirely open source â€“ fork our code and send us a pull request
with changes that support your choice language.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I sent a quick patch for org-mode in the function bar, and it has
been accepted.  :)
&lt;/p&gt;

&lt;p&gt;
If not anything more, I hope, at least a couple of curious people
will explore org-mode and find it useful.
&lt;/p&gt;</description><category>code</category><category>contribute</category><category>emacs</category><category>foss</category><category>git</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/git-powered-wikis-improved-my-bit.html</guid><pubDate>Fri, 04 Feb 2011 12:25:00 GMT</pubDate></item><item><title>CHAGANTI 635888 Emacs</title><link>http://punchagan.muse-amuse.in/posts/chaganti-635888-emacs.html</link><dc:creator>punchagan</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;
Puneeth Chaganti, hereby agrees as follows:
&lt;/p&gt;

&lt;p&gt;
Developer hereby agrees to assign and does hereby assign to FSF
Developer's copyright in changes and/or enhancements to the suite
of programs known as GNU EMACS, including any accompanying
documentation files and supporting files as well as the actual
program code.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Yay! I can now write code, that can go into Org-mode and Emacs!
I'm looking forward to this!
&lt;/p&gt;</description><category>contribute</category><category>emacs</category><category>fsf</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/chaganti-635888-emacs.html</guid><pubDate>Wed, 02 Feb 2011 22:16:00 GMT</pubDate></item><item><title>Why I like Org as a markup</title><link>http://punchagan.muse-amuse.in/posts/why-i-like-org-as-a-markup.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Org-mode, as a mode, is obviously awesome.  The ability to move
around whole blocks of text, for re-organizing documents and the
usability of tables are just two brilliant features.
&lt;/p&gt;

&lt;p&gt;
But, the org markup itself is such a cool thing.  I've been
looking at &lt;code&gt;rst&lt;/code&gt; all day, and it's such a pain to find out where
your headings are, what level your current sub-heading is at, etc.
(I'll probably do a bit better, with some getting used to. I'm an
org-addict. ;)).  With org-mode it's so intuitive!  It's so easy
to find out, with just one quick look!  I don't think any other
markup has this coolness! Org-mode FTW!
&lt;/p&gt;</description><category>emacs</category><category>orgmode</category><category>writing</category><guid>http://punchagan.muse-amuse.in/posts/why-i-like-org-as-a-markup.html</guid><pubDate>Wed, 12 Jan 2011 12:30:00 GMT</pubDate></item><item><title>Pandoc can now do Org</title><link>http://punchagan.muse-amuse.in/posts/pandoc-can-now-do-org.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Pandoc is a haskell library and a command line tool, that can
convert markup from one to another and it does it pretty well.
Until now it supported quite a few markups, but not orgmode.  But
now, Orgmode support has been added! Yay!
&lt;/p&gt;

&lt;p&gt;
But, it can only read from other formats and write to org-mode
format.  The other way around, is not possible, but you can do
that straight from org-mode, right?
&lt;/p&gt;

&lt;p&gt;
I've often felt the need for an org-importer and hence decided to
do something about it.  I stumbled upon Pandoc, when I was moving
my blog, and found it pretty neat.  After, yet another request for
an importer, on the org-mode mailing list, I decided to look at
Pandoc.  I was somehow under the impression that it was written in
Python.  But it turned out, I had to learn Haskell!  A good excuse
to learn a new language, eh?  I brushed through a tutorial for a
couple of days (and was blown off by the paradigm of the language)
and was able to port the RST writer in Pandoc, to an Org
writer.  :)
&lt;/p&gt;

&lt;p&gt;
You can get the latest version from here
&lt;/p&gt;</description><category>emacs</category><category>haskell</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/pandoc-can-now-do-org.html</guid><pubDate>Mon, 06 Dec 2010 07:22:00 GMT</pubDate></item><item><title>Some fun from #org-mode</title><link>http://punchagan.muse-amuse.in/posts/some-fun-from-org-mode.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
This is a conversation from #org-mode, published without
permission from &lt;code&gt;plovs&lt;/code&gt;, &lt;code&gt;BerntH&lt;/code&gt; and &lt;code&gt;bremner&lt;/code&gt;. If any of you
want any of the content removed, I will do so.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;punchagan&amp;gt; hi all
&lt;/p&gt;

&lt;p&gt;
&amp;lt;BerntH&amp;gt; hi punchagan   [18:36]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; BerntH: ever used/tried blorg or blorgit?  [18:47]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; I like the way org-publish works, but blorg exports one org file as a blog. If blorg were to be re-written on top of org-publish, how should it be done? use one file per post or just one file for the whole blog?  [18:52]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;bremner&amp;gt; punchagan: another option is to use ikiwiki and use the org-mode plugin to render pages. This is what i do, although only a bit of the site is in org.  [19:44]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; bremner: can I have a look at your site?  [19:45]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;bremner&amp;gt; sure, it ain't pretty, but: www.cs.unb.ca/~bremner  [19:46]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; thanks. I'll keep this in mind.   [19:47]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; I just loved the way this site looks and behaves â€“ &lt;a href="http://julien.danjou.info/projects.html"&gt;http://julien.danjou.info/projects.html&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&amp;lt;bremner&amp;gt; well, the side bar at least is possible with ikiwiki. Other than that I suppose it is mainly a matter of css  [19:48]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;BerntH&amp;gt; punchagan: nope  [19:49]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; ok BerntH  [19:50]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; punchagan ikiwiki does have an org-mode plugin  [19:56]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; plovs: yes, bremner told me that and I've seen on Worg too. :)
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; punchagan ah, yes, sorry
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; plovs: it's alright.   [19:59]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; punchagan another possibility is org2blog, which uses wordpress
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; plovs: I'm the author of it. :D
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; lol, ik, &lt;b&gt;that&lt;/b&gt; punchagan   [20:17]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; lol
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; plovs: were you kidding? or serious?  [20:19]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; punchagan sorry to say i was serious, but it will not happen again :-)
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; i really like org2blog, played with it yesterday
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; plovs: no. I was just wondering if you were playing around with me. :P
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; I'm happy some one thinks it is useful.
&lt;/p&gt;

&lt;p&gt;
&amp;lt;plovs&amp;gt; lol, no, i just didn't recognized your name, although it is kind of hard to miss  [20:21]
&lt;/p&gt;

&lt;p&gt;
&amp;lt;punchagan&amp;gt; I hope you don't mind, if I make this anecdote public?
&lt;/p&gt;
&lt;/blockquote&gt;</description><category>IRC</category><category>emacs</category><category>note</category><category>org2blog</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/some-fun-from-org-mode.html</guid><pubDate>Sat, 02 Oct 2010 14:56:00 GMT</pubDate></item><item><title>A couple of counting functions</title><link>http://punchagan.muse-amuse.in/posts/a-couple-of-counting-functions.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I had a strict character limit of 180 chars for something I was
writing. I just wrote a simple function to count characters in a
region or a buffer. Another function to count the words.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defun&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Count the number of chars in a buffer or region."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;beginning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defun&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Count the number of words in a buffer or region."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;beg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;beginning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;excursion&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;beg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;setq&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>code</category><category>elisp</category><category>emacs</category><guid>http://punchagan.muse-amuse.in/posts/a-couple-of-counting-functions.html</guid><pubDate>Fri, 17 Sep 2010 14:10:00 GMT</pubDate></item><item><title>Advice - Programming in Elisp</title><link>http://punchagan.muse-amuse.in/posts/advice-programming-in-elisp.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Below is a mail sent by Eric Schulte to the org-mode mailing list
answering a query on how to write elisp for org-mode. I am
reproducing it here, since it is useful advice for me. The actual
thread is here.
&lt;/p&gt;

&lt;hr&gt;
&lt;p&gt;
The way that I learned how to program in emacs lisp was mainly
using two commands `elisp-index-search' bound to `C-h e' on my
system, and most importantly `describe-function' bound to `C-h f'.
With `describe-function' you can look at the source code of
functions whose behavior you are familiar with, you can then copy
portions of the code to your &lt;b&gt;scratch&lt;/b&gt; buffer where they can be
edited and evaluated with `eval-defun' bound to `C-M-x'.  Now with
Babel, instead of doing this in the scratch buffer you could do
this in emacs-lisp code blocks in an org file, enabling notes and
hierarchical organization â€“ it can be nice to have your noodling
all collected in one file for later reference.
&lt;/p&gt;

&lt;p&gt;
If you are going to do any serious work with lisp, I would
emphatically recommend using paredit-mode, and becoming friends
with the Sexp movement functions
&lt;/p&gt;

&lt;p&gt;
C-M-f        runs the command paredit-forward
C-M-b        runs the command paredit-backward
C-M-u        runs the command backward-up-list
C-M-k        runs the command kill-sexp
C-y        runs the command yank
&lt;/p&gt;

&lt;p&gt;
They allow you to manipulate lisp code on the level of logical
expressions, the utility of which can not be over stated.
&lt;/p&gt;

&lt;p&gt;
As for working with Org-mode in particular, I'd recommend looking
at the documentation and source-code of Org-mode functions with
`describe-function', and then looking for how these functions are
actually used in the Org-mode code base with `rgrep'.
&lt;/p&gt;

&lt;p&gt;
For a more structured learning experience, I've heard very good
things about &lt;a href="http://www.gnu.org/software/emacs/emacs-lisp-intro/"&gt;http://www.gnu.org/software/emacs/emacs-lisp-intro/&lt;/a&gt;,
although I haven't used it myself.
&lt;/p&gt;

&lt;p&gt;
Hope this helps.  Happy Hacking â€“ Eric
&lt;/p&gt;
&lt;hr&gt;</description><category>advice</category><category>emacs</category><category>note</category><category>programming</category><guid>http://punchagan.muse-amuse.in/posts/advice-programming-in-elisp.html</guid><pubDate>Fri, 06 Aug 2010 09:07:00 GMT</pubDate></item><item><title>Refile to date-tree</title><link>http://punchagan.muse-amuse.in/posts/refile-to-date-tree.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Useful to refile notes to the journal file, which is a
date-tree. &lt;code&gt;org-refile&lt;/code&gt; isn't convenient to refile stuff to a
date-tree.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defun&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;refile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;journal&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Refile an entry to journal file's date-tree"&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;datetree&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;journal&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s"&gt;"journal.org"&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;setq&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"TIMESTAMP_IA"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"TIMESTAMP"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;setq&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nthcdr&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;setq&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cadr&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;caddr&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cut&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;subtree&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;visiting&lt;/span&gt; &lt;span class="n"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;noselect&lt;/span&gt; &lt;span class="n"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;excursion&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;datetree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;under&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bookmark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="s"&gt;"org-refile-last-stored"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="s"&gt;"Refiled to %s"&lt;/span&gt; &lt;span class="n"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defun&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agenda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;refile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;journal&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Refile the item at point to journal."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bol&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
		     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agenda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;excursion&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;restriction&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;widen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;subtree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agenda&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;refile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agenda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;redo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;defkey&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agenda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;"C-c C-S-w"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agenda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;refile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;defkey&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;"C-c C-S-w"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;refile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Enjoy!
&lt;/p&gt;</description><category>code</category><category>elisp</category><category>emacs</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/refile-to-date-tree.html</guid><pubDate>Fri, 30 Jul 2010 00:03:00 GMT</pubDate></item></channel></rss>