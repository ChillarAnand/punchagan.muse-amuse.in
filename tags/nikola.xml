<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Noetic Nought (nikola)</title><link>https://punchagan.muse-amuse.in/</link><description></description><atom:link href="https://punchagan.muse-amuse.in/tags/nikola.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 25 May 2016 11:27:06 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>blog-admin and Nikola</title><link>https://punchagan.muse-amuse.in/posts/blog-admin-and-nikola.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Another post about blogging.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/CodeFalling/blog-admin"&gt;blog-admin&lt;/a&gt; now supports &lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt;, thanks to yours truly. &lt;code&gt;blog-admin&lt;/code&gt; is an Emacs
package by &lt;a href="https://twitter.com/codefalling"&gt;CodeFalling&lt;/a&gt; that lets you view and manage your (static site
generated) blog from within inside Emacs.
&lt;/p&gt;

&lt;p&gt;
Nikola's command line utility is pretty nifty and does a bunch of useful
things. I had a few utility functions to do common tasks like create new post
and deploy blog. This worked well, but moment I came across this &lt;code&gt;blog-admin&lt;/code&gt;'s
tabular view, I was sold!
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/punchagan/org2blog"&gt;org2blog&lt;/a&gt; (a blogging tool I used previously) had a tracking file that kept
track of all the posts I made, and I used it quite a bit for navigation –
thanks to &lt;code&gt;org-mode&lt;/code&gt;'s search functionality. The tabular view of &lt;code&gt;blog-admin&lt;/code&gt;
is even better!  I really like the fact that the author has tried to keep the
package generic enough to support any blog, and adding support for Nikola has
been quite easy.
&lt;/p&gt;

&lt;p&gt;
The filtering functionality is crude, but good enough for a start. One thing I
want to add is a preview functionality for drafts. Showing some (writing)
statistics would also be nice – No. posts in the last month, total published
posts, etc.  No promises, but you may see some of these things, soon. :)
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>blog</category><category>emacs</category><category>nikola</category><guid>https://punchagan.muse-amuse.in/posts/blog-admin-and-nikola.html</guid><pubDate>Sat, 21 May 2016 14:58:07 GMT</pubDate></item><item><title>Recurse Center, 2014-08-05</title><link>https://punchagan.muse-amuse.in/posts/recurse-center-2014-08-05.html</link><dc:creator>punchagan</dc:creator><description>&lt;ul class="org-ul"&gt;
&lt;li&gt;Spent a couple of hours in the morning, trying to revive a html template for
blaggregator, that I missed out on committing previously, and wiped out due
to negligence in using `git clean`.
&lt;/li&gt;
&lt;li&gt;Spent time post lunch working through the first two chapters of the baking pi
course, by myself, reading up different references, and finally getting how
I/O is mapped to the memory in ARM.
&lt;/li&gt;
&lt;li&gt;Actually, almost.  A variant of the example that I thought should work,
doesn't.  So, I need to think/talk about it today.
&lt;/li&gt;
&lt;li&gt;I sent a patch to Nikola for the lastdeploy timestamp being UTC.  I was
hoping to work around an &lt;a href="https://github.com/sursh/blaggregator/issues/56"&gt;issue&lt;/a&gt; with Blaggregator, by somehow fixing it on the
client side, but that's probably not the right way to go about it.
&lt;/li&gt;
&lt;/ul&gt;</description><category>nikola</category><category>raspberry-pi</category><category>recursecenter</category><guid>https://punchagan.muse-amuse.in/posts/recurse-center-2014-08-05.html</guid><pubDate>Wed, 06 Aug 2014 03:44:33 GMT</pubDate></item><item><title>Org based posts in Nikola</title><link>https://punchagan.muse-amuse.in/posts/org-based-posts-in-nikola.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
&lt;a href="http://binchen.org/"&gt;Chen Bin&lt;/a&gt; asked me to share my Nikola+Org work-flow, and share an
example post.
&lt;/p&gt;

&lt;p&gt;
The org source for any post can be found by changing the URL of a post
from &lt;code&gt;.html&lt;/code&gt; to &lt;code&gt;.org&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
I don't have much of a work-flow, because I don't post too often, but
here is what I typically do, to make a new post.
&lt;/p&gt;

&lt;p&gt;
I start off by creating a new post using
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nikola new_post
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
and then give the post a title and start editing the post in Emacs.
&lt;/p&gt;

&lt;p&gt;
I have a simple snippet that lets me insert tags, based on existing
tags.
&lt;/p&gt;

&lt;script src="https://gist.github.com/6629020.js"&gt;&lt;/script&gt;

&lt;p&gt;
Once I'm happy with the content of a post, I run &lt;code&gt;nikola auto&lt;/code&gt; to
build the source and serve it locally, and see if the post "looks"
reasonable, after being rendered.
&lt;/p&gt;

&lt;p&gt;
Once, I'm happy with it, I commit the post and deploy it using &lt;code&gt;nikola
deploy&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# you may use rsync:&lt;/span&gt;
&lt;span class="c1"&gt;# "rsync -rav output/* joe@my.site:/srv/www/site"&lt;/span&gt;
&lt;span class="c1"&gt;# And then do a backup, or ping pingomatic.&lt;/span&gt;
&lt;span class="c1"&gt;# To do manual deployment, set it to []&lt;/span&gt;
&lt;span class="n"&gt;DEPLOY_COMMANDS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
	&lt;span class="c1"&gt;# work around post-list shortcode not forcing recompiling&lt;/span&gt;
	&lt;span class="s1"&gt;'rm -f cache/pages/index.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="s1"&gt;'nikola orphans|xargs rm || true'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="s1"&gt;'git checkout master'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I also have a plugin, that posts captured bookmarks and quotes onto
the blog, with a single command. I should probably make the sources of
my blog open, and push it onto GitHub.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Update &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;[2015-05-13 Wed]&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;I use my own &lt;a href="https://plugins.getnikola.com/#orgmode"&gt;plugin&lt;/a&gt; for Nikola which lets me write posts in org-mode.  There
is a similar &lt;a href="https://github.com/redguardtoo/org2nikola"&gt;plugin&lt;/a&gt; by Chen Bin, that exports posts to intermediate html,
that is then used by Nikola.
&lt;/li&gt;

&lt;li&gt;The source for my blog is now on &lt;a href="https://github.com/punchagan/punchagan.muse-amuse.in"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;

&lt;li&gt;I also have &lt;a href="https://github.com/punchagan/dot-emacs/blob/master/punchagan.org#nikola-stuff"&gt;custom elisp&lt;/a&gt; to be able to make a new post, and deploy the site
from within Emacs.
&lt;/li&gt;
&lt;/ul&gt;</description><category>blog</category><category>emacs</category><category>nikola</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/org-based-posts-in-nikola.html</guid><pubDate>Sun, 20 Apr 2014 12:05:10 GMT</pubDate></item><item><title>Bookmarks and Quotes plugin</title><link>https://punchagan.muse-amuse.in/posts/bookmarks-and-quotes-plugin.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I used to have a separate page for bookmarks and quotes on the old
blog.  They will now be shared as regular posts with 5 or more
bookmarks/quotes.  I use a bookmarklet in my browser to capture links
to an org-file using org-capture protocol and then I have a small
plugin to Nikola, that looks at such captured bookmarks and quotes and
makes new posts out of them.  This workflow is inspired by Brett
Trepestra's &lt;a href="http://brettterpstra.com/2013/01/15/a-web-excursions-system-for-static-blogs/"&gt;web excursions&lt;/a&gt; plugin.
&lt;/p&gt;

&lt;p&gt;
The plugin is currently a part of my blog source, and not published to
Nikola's plugin repository since it is very specific to my setup.  But
if anybody is interested, I can publish the code somewhere public.
&lt;/p&gt;

&lt;p&gt;
If you are interested to get these links and bookmarks into your feed reader,
you can subscribe to their feed: [quotes], &lt;a href="https://punchagan.muse-amuse.in/tags/cat_bookmarks.xml"&gt;bookmarks&lt;/a&gt;.  These posts will also
make it to the main feed, though.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;UPDATE &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;[2015-11-15 Sun 20:45]&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;
&lt;/p&gt;


&lt;ul class="org-ul"&gt;
&lt;li&gt;The quotes feed no longer exists!
&lt;/li&gt;
&lt;li&gt;The bookmarks feed doesn't really get too many updates. I use pinboard for my
bookmarks, now.
&lt;/li&gt;
&lt;/ul&gt;</description><category>blog</category><category>code</category><category>nikola</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/bookmarks-and-quotes-plugin.html</guid><pubDate>Sat, 19 Oct 2013 14:56:13 GMT</pubDate></item></channel></rss>