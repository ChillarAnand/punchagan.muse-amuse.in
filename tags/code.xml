<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Noetic Nought (code)</title><link>https://punchagan.muse-amuse.in/</link><description></description><atom:link type="application/rss+xml" rel="self" href="https://punchagan.muse-amuse.in/tags/code.xml"></atom:link><language>en</language><lastBuildDate>Thu, 16 Jun 2016 00:34:51 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Say Howdy with Emacs!</title><link>https://punchagan.muse-amuse.in/posts/say-howdy-with-emacs.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Staying in touch with people is something I'm not very good at.  Since I am not
on popular (among my friends/family) networks – FB and Whatsapp – I don't
even see random updates from people, to get some sense of being in touch.
&lt;/p&gt;

&lt;p&gt;
I recently read some old posts by Sacha Chua and was inspired by how much code
she had for &lt;a href="http://sachachua.com/blog/category/geek/emacs/bbdb/"&gt;contact management&lt;/a&gt; in her old blog posts.  I was inspired by &lt;a href="http://sachachua.com/blog/2005/05/keeping-in-touch/"&gt;this
post&lt;/a&gt; in particular to try and be more meticulous about how I stay in touch with
people. Michael Fogleman &lt;a href="https://mwfogleman.github.io/posts/08-01-2015-emacs-can-keep-in-touch.html"&gt;blogged&lt;/a&gt; about his contact management work-flow using
&lt;code&gt;keepintouch&lt;/code&gt;. It seemed to do most of what I wanted, but I wanted this to be
integrated with my &lt;code&gt;org-contacts-db&lt;/code&gt; and I felt having native elisp code would
make it easier to hook up email, chat, etc. to this.
&lt;/p&gt;

&lt;p&gt;
I ended up writing a small utility called &lt;a href="https://github.com/punchagan/howdy/"&gt;howdy&lt;/a&gt; to help me keep in touch with
people. It currently has only a couple of features:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;M-x howdy&lt;/code&gt; lets me update the last contacted timestamp for a contact.
&lt;/li&gt;
&lt;li&gt;Shows me contacts that I'm out of touch in the agenda, once I add the
following snippet to an agenda file.
&lt;div class="highlight"&gt;&lt;pre&gt;* Howdy
  %%(howdy-howdy)
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I also have a few hooks to hook up jabber messages and email to update the db.
I've added them to &lt;code&gt;howdy-hooks.el&lt;/code&gt; in case anybody else wants to use them.
They can also be used as examples to write other hooks. Feel free to contribute
other hooks or suggest improvements.  The library also ships with a modest test
suite, that will hopefully make it easier for others to contribute.
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to experimenting with this over the next few weeks and
improving it. Hopefully, it'll help me keep in touch, better than I do now.
&lt;/p&gt;</description><category>blag</category><category>code</category><category>emacs</category><category>hack</category><category>howdy</category><guid>https://punchagan.muse-amuse.in/posts/say-howdy-with-emacs.html</guid><pubDate>Thu, 28 May 2015 13:09:24 GMT</pubDate></item><item><title>Martin Fowler on Refactoring @ RubyRogues</title><link>https://punchagan.muse-amuse.in/posts/martin-fowler-on-refactoring-rubyrogues.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I stumbled on a &lt;a href="http://rubyrogues.com/178-rr-book-club-refactoring-ruby-with-martin-fowler/"&gt;Ruby Rogues podcast&lt;/a&gt; yesterday, which had &lt;a href="http://martinfowlwer.com"&gt;Martin Fowler&lt;/a&gt; as the
guest.  I really enjoyed the discussion on Refactoring (the noun, the verb and
the book!)
&lt;/p&gt;

&lt;p&gt;
Martin clarified in the podcast that refactoring (the verb/process) is a
sequence of very small refactorings, while you keep making sure that you can
run the test suite always.  A refactoring (noun) is a change where you change
the structure of the code without any externally observable changes, with the
intent of making it easier to understand and cheaper to change in future.
&lt;/p&gt;

&lt;p&gt;
I also really liked the metaphor of a 'healthy code base'.  Refactoring is,
then, the process of keeping healthy – exercise, speaking metaphorically.  You
can stack up all the exercise you need to do, until you get really unfit.
Refactoring, similarly, needs to be done regularly, to keep the code base
healthy.  This lets you go faster, in the future.
&lt;/p&gt;

&lt;p&gt;
I also really liked the advise about trying to push back the mental contexts
you build, while trying to debug/understand some code that is not very clear,
by refactoring the code to make it clearer.  Code needn't be one big chunk of
cryptographic text.  Code is writing.  It should be clear and understandable.
Or, at least we should strive to make it so!
&lt;/p&gt;

&lt;p&gt;
The discussion, as always on this podcast, was very lively, pleasant and
enjoyable! Enjoy!
&lt;/p&gt;</description><category>advice</category><category>code</category><category>programming</category><guid>https://punchagan.muse-amuse.in/posts/martin-fowler-on-refactoring-rubyrogues.html</guid><pubDate>Sat, 25 Oct 2014 14:23:25 GMT</pubDate></item><item><title>Simple org-clock and gnome/pidgin integration</title><link>https://punchagan.muse-amuse.in/posts/simple-org-clock-and-gnomepidgin-integration.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
&lt;b&gt;See update &lt;a href="https://punchagan.muse-amuse.in/posts/simple-org-clock-and-gnomepidgin-integration.html#sec-1"&gt;below&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
I have been trying to get back to using org-mode and its clocking
functionality, more often than not.  I used to use it a lot, a few years ago,
and haven't been using it, since I had been in my last job.
&lt;/p&gt;

&lt;p&gt;
To help with it, I decided to integrate clocking in and out with changing
status on Pidgin, and turning notifications on and off in Gnome.  Here's a few
lines of code that does this for me.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defadvice&lt;/span&gt; &lt;span class="nv"&gt;org-clock-in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;after&lt;/span&gt; &lt;span class="nv"&gt;pc/org-clock-in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;select&lt;/span&gt; &lt;span class="nv"&gt;start-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="s"&gt;"Turn gnome notifications off."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dbus-send-signal&lt;/span&gt;
   &lt;span class="ss"&gt;:session&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager"&lt;/span&gt;
   &lt;span class="s"&gt;"/org/gnome/SessionManager/Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager.Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"SetStatus"&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"purple-remote setstatus?status=unavailable"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defadvice&lt;/span&gt; &lt;span class="nv"&gt;org-clock-out&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;after&lt;/span&gt; &lt;span class="nv"&gt;pc/org-clock-out&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="nv"&gt;switch-to-state&lt;/span&gt; &lt;span class="nv"&gt;fail-quietly&lt;/span&gt; &lt;span class="nv"&gt;at-time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="s"&gt;"Turn gnome notifications back on."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dbus-send-signal&lt;/span&gt;
   &lt;span class="ss"&gt;:session&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager"&lt;/span&gt;
   &lt;span class="s"&gt;"/org/gnome/SessionManager/Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager.Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"SetStatus"&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"purple-remote setstatus?status=available"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Update &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2014-11-01 Sat&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
&lt;a href="http://baali.muse-amuse.in"&gt;@baali&lt;/a&gt; tried to use my code, and it turns out it didn't work for him, because I
forgot to mention that &lt;code&gt;(ad-activate 'org-clock-in)&lt;/code&gt; needs to be run, after the
&lt;code&gt;defadvice&lt;/code&gt; code.  I have no idea how it worked for me, without doing that.
May be because I have &lt;code&gt;defadvice&lt;/code&gt; for other functions?
&lt;/p&gt;

&lt;p&gt;
Also, while debugging this, I found that &lt;code&gt;defadvice&lt;/code&gt; is a deprecated way of
doing this, and &lt;code&gt;add-function&lt;/code&gt; is the way to go now.  But, instead of advising
the function, I decided to make use of &lt;code&gt;org-clock-in-hook&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
Here is the new code.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/turn-off-notifications&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Turn gnome notifications off."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dbus-send-signal&lt;/span&gt;
   &lt;span class="ss"&gt;:session&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager"&lt;/span&gt;
   &lt;span class="s"&gt;"/org/gnome/SessionManager/Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager.Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"SetStatus"&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"purple-remote setstatus?status=unavailable"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/turn-on-notifications&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Turn gnome notifications back on."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dbus-send-signal&lt;/span&gt;
   &lt;span class="ss"&gt;:session&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager"&lt;/span&gt;
   &lt;span class="s"&gt;"/org/gnome/SessionManager/Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"org.gnome.SessionManager.Presence"&lt;/span&gt;
   &lt;span class="s"&gt;"SetStatus"&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"purple-remote setstatus?status=available"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-clock-in-hook&lt;/span&gt; &lt;span class="ss"&gt;'pc/turn-off-notifications&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-clock-out-hook&lt;/span&gt; &lt;span class="ss"&gt;'pc/turn-on-notifications&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>code</category><category>emacs</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/simple-org-clock-and-gnomepidgin-integration.html</guid><pubDate>Wed, 22 Oct 2014 20:43:35 GMT</pubDate></item><item><title>Recurse Center, 2014-07-06</title><link>https://punchagan.muse-amuse.in/posts/recurse-center-2014-07-06.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I took it easy during the weekend, and went on a nice camp with my a cousin's
family to TobyHanna State Park for a day or so, and spent the remaining (long)
weekend at their place in PA.  It was a pretty nice break!
&lt;/p&gt;

&lt;p&gt;
Yesterday evening, I talked to Madhu about how ugly my code looked while I was
trying to use &lt;code&gt;libclang&lt;/code&gt;, and he told me that he found a lot of wrapped C++/C
libraries end up being that way, and I also realized that using the Python AST
library seemed much cleaner, because it just contained Python objects, but
representing C/C++ objects in an AST and interacting with them in Python, isn't
that clean.
&lt;/p&gt;

&lt;p&gt;
I cleaned up my code, and removed all the ugly regexes to use libclang to do
the parsing of the libs, and get the source code.  I basically got all the
tests passing, but they were taking an order of magnitude longer to run.  So, I
guess the next step is to cache things somehow.
&lt;/p&gt;

&lt;p&gt;
I also added support for viewing the sources of built-in types.  It was pretty
simple, once I had everything working with libclang.
&lt;/p&gt;</description><category>code</category><category>python</category><category>recursecenter</category><guid>https://punchagan.muse-amuse.in/posts/recurse-center-2014-07-06.html</guid><pubDate>Tue, 08 Jul 2014 03:28:39 GMT</pubDate></item><item><title>A smarter 404 page.</title><link>https://punchagan.muse-amuse.in/posts/a-smarter-404-page.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
&lt;a href="http://twitter.com/avudem"&gt;Voodoo&lt;/a&gt; found a broken link referring to a one of my posts, on Quora.
Given that I have changed my site generator a bunch of times now, it
is quite possible that there are other broken links at various other
places.  So, I implemented a smart &lt;a href="https://punchagan.muse-amuse.in/this-is-a-fun-hack"&gt;404 page&lt;/a&gt; for the site, yesterday.
It is very similar to something I came across on &lt;a href="http://brettterpstra.com/2013/04/07/fun-with-intelligent-404-pages/"&gt;brettterpstra&lt;/a&gt;'s site.
I just &lt;a href="https://punchagan.muse-amuse.in/assets/js/suggestions.js"&gt;hooked up&lt;/a&gt; &lt;a href="http://kiro.me/projects/fuse.html"&gt;fuse.js&lt;/a&gt; with Nikola's &lt;a href="http://getnikola.com/handbook.html#local-search"&gt;tipue-search plugin&lt;/a&gt;'s output
file.  My glue code essentially, just figures out the search term from
the URL, performs a Fuse search on the json data created by Nikola's
search plugin, and returns a list of top 5 results.  It just took me
about an hour to write, but is pretty useful, I think.
&lt;/p&gt;</description><category>code</category><category>fuzzy-search</category><category>hack</category><category>js</category><guid>https://punchagan.muse-amuse.in/posts/a-smarter-404-page.html</guid><pubDate>Mon, 11 Nov 2013 07:06:53 GMT</pubDate></item><item><title>Bookmarks and Quotes plugin</title><link>https://punchagan.muse-amuse.in/posts/bookmarks-and-quotes-plugin.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I used to have a separate page for bookmarks and quotes on the old
blog.  They will now be shared as regular posts with 5 or more
bookmarks/quotes.  I use a bookmarklet in my browser to capture links
to an org-file using org-capture protocol and then I have a small
plugin to Nikola, that looks at such captured bookmarks and quotes and
makes new posts out of them.  This workflow is inspired by Brett
Trepestra's &lt;a href="http://brettterpstra.com/2013/01/15/a-web-excursions-system-for-static-blogs/"&gt;web excursions&lt;/a&gt; plugin.
&lt;/p&gt;

&lt;p&gt;
The plugin is currently a part of my blog source, and not published to
Nikola's plugin repository since it is very specific to my setup.  But
if anybody is interested, I can publish the code somewhere public.
&lt;/p&gt;

&lt;p&gt;
If you are interested to get these links and bookmarks into your feed reader,
you can subscribe to their feed: [quotes], &lt;a href="https://punchagan.muse-amuse.in/tags/cat_bookmarks.xml"&gt;bookmarks&lt;/a&gt;.  These posts will also
make it to the main feed, though.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;UPDATE &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;[2015-11-15 Sun 20:45]&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;
&lt;/p&gt;


&lt;ul class="org-ul"&gt;
&lt;li&gt;The quotes feed no longer exists!
&lt;/li&gt;
&lt;li&gt;The bookmarks feed doesn't really get too many updates. I use pinboard for my
bookmarks, now.
&lt;/li&gt;
&lt;/ul&gt;</description><category>blog</category><category>code</category><category>nikola</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/bookmarks-and-quotes-plugin.html</guid><pubDate>Sat, 19 Oct 2013 14:56:13 GMT</pubDate></item><item><title>GitHub Cue: Recommendations for GitHub Repos</title><link>https://punchagan.muse-amuse.in/posts/github-cue-recommendations-for-github-repos.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
If you aren't already aware of it, I'm one of those people who
goes around saying, "GitHub is my Facebook".  I spend quite a lot
of time on GitHub, browsing the work of various people, looking at
loads of interesting stuff that people built.  I keep jumping
between people pages and projects using the Watchers/Watching &amp;amp;
Followers/Following pages.  This way, I do come across interesting
people and projects, but the SNR is too low.  I wanted a better
way to be able to see stuff, that I find interesting.  That's how
the idea for this Chromium app – GitHub Cue – was born.
&lt;/p&gt;

&lt;p&gt;
@baali and I hacked on this, during the last few days and got it
working.  It works as follows, (from the README) —
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Scrapes all the descriptions of the repositories being watched
by the user.
&lt;/li&gt;
&lt;li&gt;Key terms are extracted from this description text using the
Yahoo Term Extractor.
&lt;/li&gt;
&lt;li&gt;A list of languages is obtained, based on the languages of the
repositories, the user if watching.
&lt;/li&gt;
&lt;li&gt;GitHub searches are performed for a combination of 3 randomly
chosen languages and 5 random key terms.
&lt;/li&gt;
&lt;li&gt;10 random repositories out of all these, are shown.
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;
This is a very simplistic algorithm, but works decently for my
purposes.  Ideally, I would've liked to use a Collaborative
Filtering algorithm, but I found the data to be too sparse, and
the amount of computation to be too much to be done on the fly.  I
wasn't really interested in pre-computing stuff and putting it
onto my server.  I settled down to the next best thing I could
think of.
&lt;/p&gt;

&lt;p&gt;
I would appreciate any further ideas and suggestions.  Thanks!
&lt;/p&gt;</description><category>app</category><category>chrome</category><category>code</category><category>github</category><category>hack</category><guid>https://punchagan.muse-amuse.in/posts/github-cue-recommendations-for-github-repos.html</guid><pubDate>Fri, 05 Aug 2011 13:21:00 GMT</pubDate></item><item><title>GetHub: Chrome Notifications for Github updates</title><link>https://punchagan.muse-amuse.in/posts/gethub-chrome-notifications-for-github-updates.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Over the last two days, I hacked up my first Chrome extension.
I've been using Chrome only for the past couple of weeks or so and
I begin to like it, though some of the extensions aren't as mature
as I would've liked.
&lt;/p&gt;

&lt;p&gt;
The original idea was floated by my friend,  Madhu, and Lee helped
me quite a bit, while I was working on it.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;What does it do?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
It is a simple extension, that shows pop-ups, whenever there is
an update in your GitHub "Wall" (yes, this is a Facebook world)
or News Feed as they call it.
&lt;/p&gt;

&lt;p&gt;
After installation, you will need to save your &lt;code&gt;username&lt;/code&gt; and
&lt;code&gt;token&lt;/code&gt; for the extension to work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Where to get it?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Presently, you will need to get it from GitHub.
&lt;/p&gt;

&lt;p&gt;
I might add it to the Chrome Web Store, once I see more people
using it.  I couldn't justify, to myself, paying the initial
one-time verification fee that Google asks for.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;UPDATE&lt;/b&gt;: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;[2011-03-04 Fri]&lt;/span&gt;&lt;/span&gt; Added GetHub to the store
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Comments and Feedback&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Feel free to write to me at &lt;code&gt;punchagan+gethub@jeemail.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Or file issues at GitHub.
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
Happy GitHubbing!
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>chrome</category><category>code</category><category>first</category><category>git</category><category>software</category><guid>https://punchagan.muse-amuse.in/posts/gethub-chrome-notifications-for-github-updates.html</guid><pubDate>Tue, 01 Mar 2011 19:04:00 GMT</pubDate></item><item><title>Git powered wikis improved: My bit</title><link>https://punchagan.muse-amuse.in/posts/git-powered-wikis-improved-my-bit.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I accidentally came across the blog-post Git-powered wikis
improved - GitHub. And this particular paragraph caught my
eye:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
The new editor has the capability to support every markup
language that GitHub Wikis support. If you're a fan of Markdown,
Textile, pod or RDoc, the function bar buttons (e.g. bold,
italic, underline, etc.) will now work. We've even written brand
new inline help for many of GitHub Wiki's supported markup
languages.
&lt;/p&gt;

&lt;p&gt;
The language definitions the editor uses are JSON-based and easy
to edit. If you'd like us to support a markup language that we
don't currently support, Gollum, GitHub's wiki software, is
entirely open source – fork our code and send us a pull request
with changes that support your choice language.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I sent a quick patch for org-mode in the function bar, and it has
been accepted.  :)
&lt;/p&gt;

&lt;p&gt;
If not anything more, I hope, at least a couple of curious people
will explore org-mode and find it useful.
&lt;/p&gt;</description><category>code</category><category>contribute</category><category>emacs</category><category>foss</category><category>git</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/git-powered-wikis-improved-my-bit.html</guid><pubDate>Fri, 04 Feb 2011 12:25:00 GMT</pubDate></item><item><title>Raise windows (on current desktop) xdotool &amp; bash</title><link>https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I posted a snippet &lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt; of python code that used xdotool to
raise windows.  I got one patch from dusual &lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt; that
enabled raising of windows in the current workspace only.
&lt;/p&gt;

&lt;p&gt;
More importantly, Jordan gave a one-liner &lt;sup&gt;&lt;a id="fnr.3" name="fnr.3" class="footref" href="https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt; in bash,
that could do the same thing as my long and elaborate python
snippet.  I had a feeling that this would be much shorter in bash,
but I don't feel comfortable writing bash scripts. :P
&lt;/p&gt;

&lt;p&gt;
Below is a bash snippet that tries to incorporates both the
changes. :)
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;found&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

&lt;span class="k"&gt;for&lt;/span&gt; win in &lt;span class="sb"&gt;`&lt;/span&gt;xdotool search --class &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;xdotool get_desktop_for_window &lt;span class="nv"&gt;$win&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; -eq &lt;span class="sb"&gt;`&lt;/span&gt;xdotool get_desktop&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nv"&gt;found&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt; break&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$found&lt;/span&gt; -eq &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; xdotool windowactivate &lt;span class="nv"&gt;$win&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;Note&lt;/b&gt;: When you've visual effects enabled (the default option on
Ubuntu), getting the current desktop/workspace doesn't work,
probably because Root Window properties are being messed around by
it.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Note2&lt;/b&gt;: &lt;code&gt;search&lt;/code&gt; takes an option &lt;code&gt;--screen&lt;/code&gt;. It'd be nice if it
 also had an option &lt;code&gt;--desktop&lt;/code&gt;.  This task could then be done in
 a one-liner.
&lt;/p&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
My python snippet
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
dusual on twitter
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.3" name="fn.3" class="footnum" href="https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html#fnr.3"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
Jordan's one liner
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>code</category><category>hack</category><guid>https://punchagan.muse-amuse.in/posts/raise-windows-on-current-desktop-xdotool-bash.html</guid><pubDate>Sat, 06 Nov 2010 09:00:00 GMT</pubDate></item></channel></rss>