<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Noetic Nought (science)</title><link>https://punchagan.muse-amuse.in/</link><description></description><atom:link href="https://punchagan.muse-amuse.in/tags/science.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Thu, 19 May 2016 04:02:09 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Best Practices for Scientific Computing</title><link>https://punchagan.muse-amuse.in/posts/best-practices-for-scientific-computing.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Shantanu and I gave a short talk titled "Software Carpentry for
Scientists" for the graduate students of Chemical Engineering
department, IISc, this Friday.  We gave a short introduction to
Git, TDD, Numpy/Scipy, etc and mentioned a few things from Greg
Wilson et al's paper.
&lt;/p&gt;

&lt;p&gt;
I promised to revert to them with links to a few resources.  I
figured it would be more beneficial, if I just put it in a
publicly available place.
&lt;/p&gt;

&lt;p&gt;
A summary of the paper by Greg Wilson et. al., is below.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Useful resources&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;Software Carpentry&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Paper by Greg Wilson et. al.
&lt;/li&gt;
&lt;li&gt;Software Carpentry
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;Git &amp;amp; version control&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://bit.ly/VfbOww"&gt;http://bit.ly/VfbOww&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://karlagius.com/2009/01/09/version-control-for-the-masses/"&gt;http://karlagius.com/2009/01/09/version-control-for-the-masses/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://try.github.com"&gt;http://try.github.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://betterexplained.com/articles/a-visual-guide-to-version-control/"&gt;http://betterexplained.com/articles/a-visual-guide-to-version-control/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/"&gt;http://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;TDD&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://software-carpentry.org/4_0/test/index.html"&gt;http://software-carpentry.org/4_0/test/index.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.co.in/?q=TDD+matlab"&gt;https://www.google.co.in/?q=TDD+matlab&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-4" class="outline-3"&gt;
&lt;h3 id="sec-1-4"&gt;SciPy&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://scipy-lectures.github.com"&gt;http://scipy-lectures.github.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-5" class="outline-3"&gt;
&lt;h3 id="sec-1-5"&gt;Python&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-5"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://docs.python.org/tutorial"&gt;http://docs.python.org/tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-6" class="outline-3"&gt;
&lt;h3 id="sec-1-6"&gt;GUI tools in Python&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://code.enthought.com/projects/traits/docs/html/tutorials/traits_ui_scientific_app.html"&gt;http://code.enthought.com/projects/traits/docs/html/tutorials/traits_ui_scientific_app.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.enthought.com/traits"&gt;http://docs.enthought.com/traits&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.enthought.com/traitsui"&gt;http://docs.enthought.com/traitsui&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.enthought.com/enaml"&gt;http://docs.enthought.com/enaml&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Summary of paper by Greg Wilson et. al.&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Write programs for people, not computers
&lt;ul class="org-ul"&gt;
&lt;li&gt;a program should not require its readers to hold more than a
handful of facts in memory at once.
&lt;/li&gt;
&lt;li&gt;names should be consistent, distinctive and meaningful.
&lt;/li&gt;
&lt;li&gt;code style and formatting should be consistent.
&lt;/li&gt;
&lt;li&gt;all aspects of software development should be broken down
into tasks roughly an hour long
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Automate repetitive tasks
&lt;ul class="org-ul"&gt;
&lt;li&gt;rely on the computer to repeat tasks
&lt;/li&gt;
&lt;li&gt;save recent commands in a file for re-use
&lt;/li&gt;
&lt;li&gt;use a build to automate scientific work-flows
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use the computer to record history
&lt;ul class="org-ul"&gt;
&lt;li&gt;software tools should be used to track computational work
automatically.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make incremental changes
&lt;ul class="org-ul"&gt;
&lt;li&gt;work in small steps with frequent feedback and course
correction
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use version control
&lt;ul class="org-ul"&gt;
&lt;li&gt;use a version control system
&lt;/li&gt;
&lt;li&gt;everything that has been created manually should be put in
version control
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Don't repeat yourself (or others)
&lt;ul class="org-ul"&gt;
&lt;li&gt;every piece of data must have a single authoritative
representation in the system
&lt;/li&gt;
&lt;li&gt;code should be modularized rather than copied and pasted
&lt;/li&gt;
&lt;li&gt;re-use code instead of rewriting it
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Plan for mistakes
&lt;ul class="org-ul"&gt;
&lt;li&gt;add assertions to programs to check their operation
&lt;/li&gt;
&lt;li&gt;use an off-the-shelf unit testing library
&lt;/li&gt;
&lt;li&gt;use all available oracles when testing programs
&lt;/li&gt;
&lt;li&gt;turn bugs into test cases
&lt;/li&gt;
&lt;li&gt;use a symbolic debugger
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Optimize software only after it works correctly
&lt;ul class="org-ul"&gt;
&lt;li&gt;use a profiler to identify bottlenecks
&lt;/li&gt;
&lt;li&gt;write code in the highest-level language possible
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Document design and purpose, not mechanics
&lt;ul class="org-ul"&gt;
&lt;li&gt;document interfaces and reasons, not implementations
&lt;/li&gt;
&lt;li&gt;refactor code instead of explaining how it works
&lt;/li&gt;
&lt;li&gt;embed the documentation for a piece of software in that software
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Collaborate
&lt;ul class="org-ul"&gt;
&lt;li&gt;use pre-merge code reviews
&lt;/li&gt;
&lt;li&gt;use pair programming when bringing someone new up to speed
and when tackling particularly tricky problems
&lt;/li&gt;
&lt;li&gt;use an issue tracking tool
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>advice</category><category>programming</category><category>science</category><category>software</category><guid>https://punchagan.muse-amuse.in/posts/best-practices-for-scientific-computing.html</guid><pubDate>Mon, 24 Dec 2012 10:51:00 GMT</pubDate></item><item><title>Awe[ful] @ Science !!?!??!</title><link>https://punchagan.muse-amuse.in/posts/aweful-science.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I was at the B.M Birla Science Musuem yesterday… it was calm
with no one in there.. the only people i could see were the
sweepers and cleaners.. the place was dull and lifeless… I dint
like it.. but slowly.. as the afternoon progressed.. people
started coming in and by 5 in the evening.. there were quite a few
in. The museum seemed to have sprung to life suddenly… there was
a lot of action all around with people enjoying in ( and trying to
understand) the wonderful world of science….
&lt;/p&gt;

&lt;p&gt;
A lot of kids had come along with their parents… to dive into
the world of science… they were enjoying it… the parents also
turned into kids and were having great fun… it was a great
sight… the parents tried their best to demistify the
happenings… those with a science background did it from thier
knowledge.. the others patiently went through the explanations…
&lt;/p&gt;

&lt;p&gt;
The kids were thoroughly enjoying it… I don't know if they would
later on in life remember what they learnt now… but definitely a
love for science and physics will be ignited in their hearts, it
will fill their consciousness… the spirit of curiosity will have
multiplied manifold… even the elders..connected with the child
somewhere deep within themselves… they too enjoyed the wonders
of the world of science…[and ofcourse the company and thrill in
the eyes of their kids..] I too enjoyed the experience… the
experiments and the thrill of the others brought a smile to my
face too…. but it set me thinking…
&lt;/p&gt;

&lt;p&gt;
If science can inspire so much awe.. what's happening at our
engineering colleges? When people have the chance to learn a whole
lot of science and put it to practical use… why isn't it that
they are excited about it? Why is it that people just endup
mugging a few formulae just before exams and get over with it?
Where's the problem? Where is that curiosity, all of us had as a
child, lost?
&lt;/p&gt;

&lt;p&gt;
I can recollect, in the last sem while doing experiments in the MT
lab there wasn't even a tenth of the awe or joy… that i could
see and feel at the museum… why?? Is it that the child within
us.. [the future engineers] dead? { If that's true.. then the
country is in deep trouble..} But I don't think that's true… I
enjoyed my visit to the museum totally…and I am sure every other
'to be engineer' would have too.. then where's the trouble?
&lt;/p&gt;

&lt;p&gt;
I don't know exactly… but I wonder if its because everything is
equated to marks and grades… all that matters to an engineering
student [and the world around him/her..] is his/her CG or
%age… Is this what the country needs? Were the 'temples of
Learning'- the IIT's and a whole lot of other technical
institutions set-up for this very pupose? Of what use are those
engineers to the country, who aren't in awe of science and
engineering, whose spirit of curiosity has been overpowered and
suppressed by the present education system?
&lt;/p&gt;

&lt;p&gt;
Isn't it time we have a closer look at our education system… why
are we still sticking to the 'British sytem' introduced during a
colonial rule.. to break the back bone of our nation… to supress
our ability to think rationally.. to produce third rate clerks to
work for them at lower wages? Why is the emphasis on marks and
grades growing exponentially? Shouldn't we start working to cut
this growth at its root? Is this sytem good enough to produce
"real" engineers, doctors, lawyers, journos, CA's, architects,
designers, writers, artists etc etc..
&lt;/p&gt;

&lt;p&gt;
Where have all the gurukuls of the ancient past and the
Santiniketans of the recent past gone? Isn't the country in
desparate need of more of these 'temples of learning'??
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;The highest education is that which does not merely give us
information but makes our life in harmony with all existence.&lt;/i&gt; –
Rabindranath Tagore
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;Science is a wonderful thing if one does not have to earn one's
living at it&lt;/i&gt; –Albert Einstein
&lt;/p&gt;</description><category>blab</category><category>kids</category><category>life</category><category>ology</category><category>science</category><guid>https://punchagan.muse-amuse.in/posts/aweful-science.html</guid><pubDate>Thu, 21 Dec 2006 12:50:00 GMT</pubDate></item></channel></rss>