<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Noetic Nought (blag)</title><link>https://punchagan.muse-amuse.in/</link><description></description><atom:link rel="self" href="https://punchagan.muse-amuse.in/tags/blag.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Mon, 06 Jun 2016 15:57:07 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Reading-time based scheduling</title><link>https://punchagan.muse-amuse.in/posts/reading-time-based-scheduling.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I had posted a link to an poem written on Medium on a Slack channel that I use
with friends.  A friend said that she liked the fact that the Slack article
preview had the reading time from Medium in it.  She could decide whether or
not she wanted to read the poem or any other article at that moment.
&lt;/p&gt;

&lt;p&gt;
This gave me the idea for a reading time extension for my &lt;a href="https://www.chromium.org/getting-involved/download-chromium"&gt;browser&lt;/a&gt;, or my &lt;a href="https://github.com/skeeto/elfeed"&gt;feed
reader&lt;/a&gt; or my &lt;a href="https://pinboard.in"&gt;bookmarks&lt;/a&gt; – my reading list.  The first version should be able to
compute or extract the reading time for an article or a tab in my browser, and
index them.  I want to be able to specify the amount of time I will be able to
spend reading, and be presented with something from my reading list.  I think
this would help with scheduling the reading of longer articles, and also to
actually help me get through my reading list.
&lt;/p&gt;

&lt;p&gt;
Reading time estimates that use heuristics based on word-count may not really
work, and may do &lt;a href="https://medium.com/@fchimero/this-should-only-take-a-minute-or-four-probably-e38bb7bf2adf#.mvkd09m6m"&gt;more harm than good&lt;/a&gt;.  But, it may still be worth a try to see
if it helps my reading habits in any way.  A quick search pointed me to &lt;a href="https://chrome.google.com/webstore/detail/readism-article-reading-t/bmiolhceebkeljaikojgcoeefblcihje"&gt;this
extension&lt;/a&gt;, that can give the reading time for any page but doesn't really do
what I want.
&lt;/p&gt;</description><category>blag</category><category>hack</category><category>idea</category><category>programming</category><category>reading</category><guid>https://punchagan.muse-amuse.in/posts/reading-time-based-scheduling.html</guid><pubDate>Mon, 06 Jun 2016 07:43:12 GMT</pubDate></item><item><title>Stepping AFK</title><link>https://punchagan.muse-amuse.in/posts/stepping-afk.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
In the past few weeks, I noticed three instances where I was forced to take a
break exactly when I was ready to jump in and write some code to fix a bug or
add a small feature.  I had to step out of the house and take a walk to meet
someone, etc.
&lt;/p&gt;

&lt;p&gt;
I ended up getting ideas during the walks, which significantly changed and
simplified how I would've implemented things, if not for those breaks.  Even if
I did end up zeroing down to those solutions, I am pretty sure it would've
taken a couple of not-so-good attempts and much longer than it did.
&lt;/p&gt;

&lt;p&gt;
Context switches are usually considered to be &lt;a href="http://heeris.id.au/2013/this-is-why-you-shouldnt-interrupt-a-programmer/"&gt;expensive for programmers&lt;/a&gt;, but
taking a break at the exact time when I had all the required context loaded
into my head seemed to help. It was also probably helpful that I was taking a
walk, and there wasn't really any other inputs or outputs competing for the
space in my head.
&lt;/p&gt;

&lt;p&gt;
This got me thinking about doing this more deliberately – I'd love to hear
about any experiences or any experiments any of you have done with this.  Also,
I'm reminded of Rich Hickey's &lt;a href="https://www.youtube.com/watch?v=f84n5oFoZBc"&gt;Hammock Driven Development&lt;/a&gt; talk and I wonder if
this is a smaller/different version of it, and makes me want to try out the
things he suggests more deliberately.  If any of you has thoughts and
suggestions, I'd love to hear from you!
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>programming</category><category>thought</category><guid>https://punchagan.muse-amuse.in/posts/stepping-afk.html</guid><pubDate>Fri, 03 Jun 2016 18:21:30 GMT</pubDate></item><item><title>PyCon India 2016 - Propose a talk</title><link>https://punchagan.muse-amuse.in/posts/pycon-india-2016-propose-a-talk.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
CFP for PyCon 2016 is &lt;a href="https://in.pycon.org/cfp/2016/proposals/"&gt;open&lt;/a&gt; and you should propose a talk!
&lt;/p&gt;

&lt;p&gt;
There has been a lot of discussion on trying to improve the talk quality at the
events. As my bit of contribution to this, below is a re-hash of some good
advice from the internet on why you should give a talk, and how to submit a
good proposal.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Why?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;You &lt;a href="https://vimeo.com/96692937#t=2m56s"&gt;needn't be an expert&lt;/a&gt; on a topic. If you have enough experience about
something to help make the next person's experience with it better, you are
good.
&lt;/li&gt;

&lt;li&gt;Its a great way to find people who are interested in the same things as you
are and to get to talk to them.  If you are an introvert, you should
&lt;a href="https://emptysqua.re/blog/tech-talks-are-campfires-jesses-three-reasons-you-should-speak-at-pycon/#meet-specialists"&gt;definitely be speaking&lt;/a&gt;!
&lt;/li&gt;

&lt;li&gt;Proposing and giving a talk is about thinking about something hard enough to
refine your thoughts, and being able to explain it to others. Its a useful
skill to hone.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;How?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Talks are &lt;a href="http://speaking.io/plan/talks-are-entertainment/"&gt;entertainment&lt;/a&gt;. Pick a topic that you are excited about and fascinated
by. Let it be a general topic that will have a significant number of people
interested in it.
&lt;/li&gt;

&lt;li&gt;What you want the attendees to be telling their friends about your talk,
after they go back.  Make it the &lt;a href="http://blog.briancurtin.com/posts/writing-a-pycon-proposal.html"&gt;objective&lt;/a&gt; of your talk.
&lt;/li&gt;

&lt;li&gt;Submit a complete, clear and compelling proposal. Show the reviewers that you
are willing to put in the effort to prepare for and to give a great
talk. Here are a &lt;a href="https://github.com/akaptur/pycon-proposals/tree/master/accepted"&gt;bunch of proposals&lt;/a&gt; to see and learn from.
&lt;/li&gt;

&lt;li&gt;Submit an outline along with your talk. Show the talk can be delivered in the
given time and will be interesting. Include an indication of how much &lt;a href="https://github.com/akaptur/pycon-proposals/blob/master/accepted/important_decisions_kaptur_2014.md#outline"&gt;time&lt;/a&gt;
you intend to spend on each part of your talk.
&lt;/li&gt;

&lt;li&gt;Choose a good title.  The title is what catches the attention of your
audience when they are trying to pick a talk.  Avoid buzz words.
&lt;/li&gt;

&lt;li&gt;Get feedback. Like any writing, feedback can be helpful at all stages –
brainstorm while choosing topics to getting critique on the full abstract.
&lt;/li&gt;

&lt;li&gt;Convince the reviewers that you can give a &lt;a href="https://emptysqua.re/blog/seven-tips-for-pycon/#note-to-the-organizers"&gt;well-rehearsed and entertaining&lt;/a&gt; –
link to previous talks you've given, include links to any testimonials you've
received from your audience, etc.  If you don't have a previously recorded
talk, give a small talk to your friends or colleagues and have it recorded.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;References&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;PyCon US has some &lt;a href="https://us.pycon.org/2016/speaking/talks/"&gt;good advice&lt;/a&gt; on how to submit a proposal and most of it is
generic enough for you to use for PyCon India, or any other conference.
&lt;/li&gt;

&lt;li&gt;These posts (&lt;a href="https://emptysqua.re/blog/tech-talks-are-campfires-jesses-three-reasons-you-should-speak-at-pycon/"&gt;1&lt;/a&gt; &lt;a href="https://emptysqua.re/blog/seven-tips-for-pycon/"&gt;2&lt;/a&gt; and &lt;a href="https://emptysqua.re/blog/tag/conference-tips/"&gt;more&lt;/a&gt;) by Jesse Davis are so so good!
&lt;/li&gt;

&lt;li&gt;I also liked &lt;a href="https://vimeo.com/96692937"&gt;"The Talk on Talks"&lt;/a&gt; by Zach Holman.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>advice</category><category>blab</category><category>blag</category><category>conference</category><category>pycon</category><category>talks</category><guid>https://punchagan.muse-amuse.in/posts/pycon-india-2016-propose-a-talk.html</guid><pubDate>Tue, 31 May 2016 10:10:43 GMT</pubDate></item><item><title>Save the Map -- Please respond</title><link>https://punchagan.muse-amuse.in/posts/save-the-map-please-respond.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
The Ministry of Home Affairs put out a &lt;a href="http://mha.nic.in/sites/upload_files/mha/files/GeospatialBill_05052016_eve.pdf"&gt;draft&lt;/a&gt; and an RFC for a Geo-spatial bill
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
To regulate the acquisition, dissemination, publication and distribution of
geospatial information of India which is likely to affect the security,
sovereignty and integrity of India.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Even if you put aside questions about how a vetting process, for "dealing with"
any geospatial information, would help with the said goals, the bill defines
&lt;i&gt;geospatial information&lt;/i&gt; so broadly that even taking a geo-tagged picture at
the Taj mahal or sharing the location of your house for a meal delivery would
have you breaking the law.
&lt;/p&gt;

&lt;p&gt;
A group of volunteers made &lt;a href="http://savethemap.in"&gt;Save the map&lt;/a&gt; which has more information on this,
along with a draft response that you can send to the Ministry.  Please respond
before June 2nd, 2016.
&lt;/p&gt;</description><category>blag</category><category>india</category><category>legal</category><category>maps</category><guid>https://punchagan.muse-amuse.in/posts/save-the-map-please-respond.html</guid><pubDate>Sat, 28 May 2016 15:18:30 GMT</pubDate></item><item><title>Thinking about Data Ethics</title><link>https://punchagan.muse-amuse.in/posts/thinking-about-data-ethics.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Earlier this month, a researcher made a dataset containing the profiles of about
70,000 users public. He didn't really see a problem in doing this because he
felt he was only presenting &lt;a href="https://twitter.com/KirkegaardEmil/status/730449904909324289"&gt;already publicly available&lt;/a&gt; data in a more usable
form. was only presenting it in a more usable form.
&lt;/p&gt;

&lt;p&gt;
Yesterday, I came across this quote in the very first chapter of &lt;a href="https://twitter.com/allendowney"&gt;Allen Downey&lt;/a&gt;'s
book &lt;a href="http://greenteapress.com/thinkstats2/index.html"&gt;Think Stats&lt;/a&gt; which I liked a lot, and reminded me of this incident.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://c2.staticflickr.com/8/7193/26969166130_58e4865f47_b.jpg" alt="26969166130_58e4865f47_b.jpg"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I hadn't looked at the OKCupid data release and the discussion around it much,
but I went back and read &lt;a href="https://points.datasociety.net/okcupid-data-release-fiasco-ba0388348cd#.u8xxlkqsv"&gt;this article&lt;/a&gt; by a social media researcher who thinks a
lot about these things. 
&lt;/p&gt;

&lt;p&gt;
She puts forth a lot of interesting ideas to think about ethics. Some things
that stood out to me are:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Ask yourself how the person whose data you are using feels about the data.
&lt;/li&gt;
&lt;li&gt;Taking a 'what if' impact approach to thinking about data and ethics.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Also, you needn't really call yourself a researcher to be actually doing
experiments with (or &lt;a href="http://www.npr.org/2016/05/17/478266839/this-is-your-brain-on-uber"&gt;analyzing&lt;/a&gt;) "big-data" and discovering and putting out facts
that have an impact – however big or small. You should really go read the
article, whether or not you are a researcher using data.
&lt;/p&gt;

&lt;p&gt;
Incidentally, there is a meet-up on &lt;a href="http://www.meetup.com/DataKind-Bangalore/events/231310093/"&gt;Data Ethics&lt;/a&gt; this weekend in Bangalore. I'm
excited to learn and think more about this, and talk to others who care.
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>data</category><category>ethics</category><category>programming</category><guid>https://punchagan.muse-amuse.in/posts/thinking-about-data-ethics.html</guid><pubDate>Wed, 25 May 2016 15:36:56 GMT</pubDate></item><item><title>Level-up Tools</title><link>https://punchagan.muse-amuse.in/posts/level-up-tools.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Thanks to a &lt;a href="https://twitter.com/baali_"&gt;friend&lt;/a&gt; I got an upgrade to our still-being-setup kitchen.  I now
have a non-stick pan along with a few more new additions.  I would previously
use a bowl that people usually use to boil &lt;a href="http://img6a.flixcart.com/image/pot-pan/t/s/8/aluminium-polish-top-jk-vallabhdas-400x400-imae7w9y9ehukjhx.jpeg"&gt;milk&lt;/a&gt; etc. for making whatever I did.
The non-stick pan feels so great!  It has made it a lot simpler to make some of
the things I used to, because its non-stick. And it has vastly expanded the
possibilities of things I can make, by virtue of being flat and wide based.
The pan is such a great addition to my kitchen paraphernalia, and it adds a new
dimension to the kind of things I can make.  I'm not here to write a user
review for it, though.
&lt;/p&gt;

&lt;p&gt;
What are such tools in other things that you do, that drastically changed the
way you did something, or added a new dimension to the kinds of things you
could do, tools that make you feel like you have a new super-power?  Learning
to write Python (after starting off with C) seemed to give me so much power
allowing me to focus on the problem, rather than fussing over the low level
details. Sasha mentions in &lt;a href="http://sasha.wtf/anki-post-1/"&gt;this post&lt;/a&gt; how using a Spaced Repetition System like
&lt;a href="https://ankiweb.net/"&gt;Anki&lt;/a&gt; drastically improved her efficiency because she could focus on thinking
about higher level things rather than trying to recall or search for what
method or function to use to do something.
&lt;/p&gt;

&lt;p&gt;
What are some such level-up tools for you? Is there a systematic approach to
discovering tools?
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>learning</category><category>life</category><category>programming</category><guid>https://punchagan.muse-amuse.in/posts/level-up-tools.html</guid><pubDate>Mon, 23 May 2016 16:08:14 GMT</pubDate></item><item><title>blog-admin and Nikola</title><link>https://punchagan.muse-amuse.in/posts/blog-admin-and-nikola.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Another post about blogging.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/CodeFalling/blog-admin"&gt;blog-admin&lt;/a&gt; now supports &lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt;, thanks to yours truly. &lt;code&gt;blog-admin&lt;/code&gt; is an Emacs
package by &lt;a href="https://twitter.com/codefalling"&gt;CodeFalling&lt;/a&gt; that lets you view and manage your (static site
generated) blog from within inside Emacs.
&lt;/p&gt;

&lt;p&gt;
Nikola's command line utility is pretty nifty and does a bunch of useful
things. I had a few utility functions to do common tasks like create new post
and deploy blog. This worked well, but moment I came across this &lt;code&gt;blog-admin&lt;/code&gt;'s
tabular view, I was sold!
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/punchagan/org2blog"&gt;org2blog&lt;/a&gt; (a blogging tool I used previously) had a tracking file that kept
track of all the posts I made, and I used it quite a bit for navigation –
thanks to &lt;code&gt;org-mode&lt;/code&gt;'s search functionality. The tabular view of &lt;code&gt;blog-admin&lt;/code&gt;
is even better!  I really like the fact that the author has tried to keep the
package generic enough to support any blog, and adding support for Nikola has
been quite easy.
&lt;/p&gt;

&lt;p&gt;
The filtering functionality is crude, but good enough for a start. One thing I
want to add is a preview functionality for drafts. Showing some (writing)
statistics would also be nice – No. posts in the last month, total published
posts, etc.  No promises, but you may see some of these things, soon. :)
&lt;/p&gt;</description><category>blab</category><category>blag</category><category>blog</category><category>emacs</category><category>nikola</category><guid>https://punchagan.muse-amuse.in/posts/blog-admin-and-nikola.html</guid><pubDate>Sat, 21 May 2016 14:58:07 GMT</pubDate></item><item><title>Book Review: 5 Love Languages</title><link>https://punchagan.muse-amuse.in/posts/book-review-5-love-languages.html</link><dc:creator>punchagan</dc:creator><description>&lt;div class="book-figure"&gt;

    &lt;div class="book-figure-media"&gt;
        &lt;a class="book-figure-image" href="http://www.amazon.com/gp/product/080241270X" target="_blank"&gt;
            &lt;img height="150px" src="https://farm2.staticflickr.com/1656/24408821265_6f067fe523_o.jpg" alt="5 Love Languages"&gt;
        &lt;/a&gt;
    &lt;/div&gt;

    &lt;div class="book-figure-info"&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;span class="book-figure-info-label"&gt;Author &lt;/span&gt;&lt;span&gt;Gary Chapman&lt;/span&gt;&lt;/li&gt;
	    &lt;li&gt;&lt;span class="book-figure-info-label"&gt;ISBN &lt;/span&gt;&lt;span&gt;080241270X&lt;/span&gt;&lt;/li&gt;
	    &lt;li&gt;&lt;span class="book-figure-info-label"&gt;Read &lt;/span&gt;&lt;span&gt;2016-01-13&lt;/span&gt;&lt;/li&gt;
	    &lt;li&gt;&lt;span class="book-figure-info-label"&gt;Rating &lt;/span&gt;&lt;span&gt;5/5&lt;/span&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;
I first heard of this book in a discussion on relationships amongst friends
from RC.  The discussion was quite interesting and the book received more than
a couple of strong recommendations. So, I decided to pick it up.
&lt;/p&gt;

&lt;p&gt;
Very simply, the book is codified common sense explaining what Love is. Gary
Chapman, the author, started with the question "What makes you feel loved" and
found that the answers could be grouped into the following 5 categories:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Words of affirmation
&lt;/li&gt;
&lt;li&gt;Quality time
&lt;/li&gt;
&lt;li&gt;Receiving gifts
&lt;/li&gt;
&lt;li&gt;Acts of service
&lt;/li&gt;
&lt;li&gt;Physical touch,
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
which he calls the languages of love.  He also proposes that people have a
&lt;b&gt;primary&lt;/b&gt; language of love, and a failure to speak to a person in their primary
language would make them feel unloved.
&lt;/p&gt;

&lt;p&gt;
The book is filled with anecdotes to explain what each of these languages means
and how to speak them, along with practical advice and exercises to learn to
speak each of these languages.  Though the book has been written with couples
in mind, the fundamental ideas in this book can be applied to any
relationships. I feel like it has been helping me connect a few dots, ever
since I've started reading it.
&lt;/p&gt;

&lt;p&gt;
It has been totally worth my time to read this book. A highly recommended read!
&lt;/p&gt;

&lt;p&gt;
Below are some of my notes. Feel free to suggest improvements (for readability
and otherwise) on the notes.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;a href="https://farm2.staticflickr.com/1484/23781720643_a8e91c0cf8_o.jpg"&gt;&lt;img src="https://farm2.staticflickr.com/1484/23781720643_a8e91c0cf8_o.jpg" alt="23781720643_a8e91c0cf8_o.jpg"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;</description><category>blag</category><category>book</category><category>book-notes</category><category>life</category><category>love</category><guid>https://punchagan.muse-amuse.in/posts/book-review-5-love-languages.html</guid><pubDate>Tue, 12 Jan 2016 14:02:51 GMT</pubDate></item><item><title>Partial postgres db dumps for a Django app</title><link>https://punchagan.muse-amuse.in/posts/partial-postgres-db-dumps-for-a-django-app.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Off late, I have been working with a large &lt;code&gt;postgres&lt;/code&gt; database that is used by
an app built in &lt;code&gt;Django&lt;/code&gt;.  I wanted a partial dump of the database to try out
some experimental clean up scripts.  I haven't really used databases before,
and the last time I had to do this I did it in a pretty ad-hoc fashion.  This
time around, I tried to do it more methodically and to document it.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;The Django Route&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I looked around for tools that let you do this, and found &lt;a href="https://github.com/davedash/django-fixture-magic"&gt;django-fixture-magic&lt;/a&gt;.
I first tried it out on my older partial dump (10% as large as the original db)
and it turned out to be reasonably fast and worked well, after making a &lt;a href="https://github.com/davedash/django-fixture-magic/pull/35"&gt;few
changes&lt;/a&gt; to get it working with Python 3.x.  Its &lt;code&gt;kitchensink&lt;/code&gt; flag to the
&lt;code&gt;dump_object&lt;/code&gt; seemed like a promising option, but &lt;b&gt;didn't&lt;/b&gt; really seem to get all
the required tables for ManyToManyFields.  I worked around it, by getting a
dump of all the models which were related using Django's &lt;code&gt;dumpdata&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;Get a dump with objects of interest&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
The &lt;code&gt;dump_object&lt;/code&gt; command lets you run commands to select the objects that you
want to have in the dump, and that is quite a useful thing.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;python manage.py dump_object dataset.Product -k --query &lt;span class="s1"&gt;'{"subcategory_id__in": [1886, ...]}'&lt;/span&gt; &amp;gt; products.json
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Also, get a dump of related tables.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Dump of related fields&lt;/span&gt;
python manage.py dumpdata dataset.Attribute &amp;gt; attributes.json
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;Create the new empty db&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
Next, create a new database where this fixture can be loaded!
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Create the db&lt;/span&gt;
sudo su - postgres
createdb mydb

&lt;span class="c"&gt;# Create a user, if required&lt;/span&gt;
createuser -P
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2-1" class="outline-4"&gt;
&lt;h4 id="sec-1-2-1"&gt;Grant access to the user&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-2-1"&gt;
&lt;p&gt;
In the &lt;code&gt;psql&lt;/code&gt; prompt type the following to grant the user permissions for the
database.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;mydb&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;myuser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;Fix settings.py and create tables for the models.&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-3"&gt;
&lt;p&gt;
Make changes to &lt;code&gt;settings.py&lt;/code&gt; to use the newly created database, and then
create the tables used by the app, and then load the data.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;python manage.py syncdb
python manage.py loaddata products.json
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-4" class="outline-3"&gt;
&lt;h3 id="sec-1-4"&gt;Too slow!&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-4"&gt;
&lt;p&gt;
This method worked and was reasonably fast when I was trying to get 20k rows
from a table with about 200k rows, with all the dependencies.
&lt;/p&gt;

&lt;p&gt;
But, when I tried to get a dump of about 200k rows from a table with 2M rows,
it was way too slow to be of any use.  There could've been a couple of reasons
for this, which I didn't have the time to look into, and debug.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;The web-server where the &lt;code&gt;Django&lt;/code&gt; app was running, and the &lt;code&gt;db&lt;/code&gt; server with
the &lt;code&gt;postgres&lt;/code&gt; database were on different machines in separate datacenters,
which could've been adding a significant amount of latency.
&lt;/li&gt;

&lt;li&gt;Just the size of the database being much larger could be making it slower?
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
These are things I should be looking into and learning about, when I have more
time at hand.  For now, I needed a quicker way to get a dump.  Even though the
raw SQL route was more manual, it turned out to be much quicker.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Raw SQL dump route&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;Get a dump of the interesting tables&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
First, I had to get a dump of all the tables with the data I was interested in,
one-by-one.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="ss"&gt;"dataset_product"&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;"dataset_product"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"subcategory_id"&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;319557&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;94589&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;332&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;626&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1886&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="ss"&gt;"dataset_product"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"gender_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/products.tsv'&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="ss"&gt;"dataset_photo"&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="ss"&gt;"dataset_photo"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"product_id"&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;U0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"id"&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="ss"&gt;"dataset_product"&lt;/span&gt; &lt;span class="n"&gt;U0&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"subcategory_id"&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;319557&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;94589&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;332&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;626&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1886&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;U0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"gender_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/photos.tsv'&lt;/span&gt;

&lt;span class="c1"&gt;-- Copy a bunch of other tables!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;Load the data from the dumps&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- syncdb&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;dataset_product&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/products.tsv'&lt;/span&gt; &lt;span class="k"&gt;ENCODING&lt;/span&gt; &lt;span class="s1"&gt;'UTF8'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;dataset_photo&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/photos.tsv'&lt;/span&gt; &lt;span class="k"&gt;ENCODING&lt;/span&gt; &lt;span class="s1"&gt;'UTF8'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- Copy a bunch of other tables!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;Make tables writable&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;p&gt;
Some of the tables did not let me write anything to them, until I &lt;a href="http://centoshowtos.org/web-services/django-and-postgres-duplicate-key/"&gt;altered the
sequence&lt;/a&gt; for these tables.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;Automating&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;p&gt;
It would be pretty nice if all of this was automated – allow a user to enter
exactly the same kind of a query that &lt;code&gt;django-fixture-magic&lt;/code&gt; lets you run, and
figure out the SQL copies that need to be done to get the requested dump. Its
something that currently would qualify as yak-shaving, but may be a handy thing
to have. Someone somewhere possibly already has something that does this.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>blag</category><category>django</category><category>postgres</category><category>sql</category><guid>https://punchagan.muse-amuse.in/posts/partial-postgres-db-dumps-for-a-django-app.html</guid><pubDate>Sun, 10 Jan 2016 00:09:18 GMT</pubDate></item><item><title>Clock in and get-shit-done</title><link>https://punchagan.muse-amuse.in/posts/clock-in-and-get-shit-done.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I had &lt;a href="https://punchagan.muse-amuse.in/posts/simple-org-clock-and-gnomepidgin-integration.html"&gt;setup&lt;/a&gt; a couple of hooks about an year ago that turn off all notifications
while I'm clocking in. But, I find myself switching to the browser and jumping
to twitter, out of habit.  I've tried &lt;a href="https://github.com/leftnode/get-shit-done"&gt;get-shit-done&lt;/a&gt; in the past to help myself
break this habit. But enabling get-shit-done manually is step that quickly
became a non-habit.
&lt;/p&gt;

&lt;p&gt;
So, I hooked up get-shit-done into an &lt;code&gt;org-clock-in-hook&lt;/code&gt;.  The snippet below
is what I added into a function that is added to this hook.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;with-temp-buffer&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cd&lt;/span&gt; &lt;span class="s"&gt;"/sudo::/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"HOME=/home/punchagan get-shit-done work"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;get-shit-done&lt;/code&gt; needs to be run as &lt;code&gt;root&lt;/code&gt;, since it does things like modifying
&lt;code&gt;/etc/hosts&lt;/code&gt; and restarting networking.  Just calling &lt;code&gt;get-shit-done&lt;/code&gt; as a
shell command fails with the error &lt;code&gt;sudo: no tty present and no askpass program
specified&lt;/code&gt;.  I found a couple of ways to fix this. The snippet above
piggy-backs on tramp to allow for a way to enter the password for &lt;code&gt;sudo&lt;/code&gt; to
use. This also means that I don't need to enter the password, as long as the
tramp connection is alive.
&lt;/p&gt;

&lt;p&gt;
For someone worried about having such an easy way of running something as
&lt;code&gt;root&lt;/code&gt;, using something like &lt;code&gt;gnome-ssh-askpass&lt;/code&gt; as the askpass program might
work better.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"SUDO_ASKPASS=\"/usr/lib/openssh/gnome-ssh-askpass\" get-shit-done work"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>blag</category><category>emacs</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/clock-in-and-get-shit-done.html</guid><pubDate>Tue, 22 Dec 2015 14:17:04 GMT</pubDate></item></channel></rss>