<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Noetic Nought (orgmode)</title><link>http://punchagan.muse-amuse.in/</link><description></description><language>en</language><lastBuildDate>Tue, 26 Aug 2014 00:08:56 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Hacker School, 2014-07-21</title><link>http://punchagan.muse-amuse.in/posts/hacker-school-2014-07-21.html</link><dc:creator>punchagan</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Yesterday&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;It was exciting to have so many new Hacker Schoolers in the space.  But, the
excitement was kinda distracting too.
&lt;/li&gt;

&lt;li&gt;I spent most of the day looking at shairport, and libshairport and trying to
wrap it, so I can use it to get data for the spectrum analyzer via the
Air-play protocol.  I was able to call it using &lt;code&gt;ctypes&lt;/code&gt;, but it doesn't seem
discoverable.
&lt;/li&gt;

&lt;li&gt;I also briefly looked at Julia and &lt;a href="http://dwm.suckless.org"&gt;dwm&lt;/a&gt;, to try and port dwm to Julia.  It
doesn't seem like too much work, but is going to take me a while given how
comfortable I'm with both Julia and C.
&lt;/li&gt;

&lt;li&gt;Yaron Minsky's talk on distributed systems was a great introduction to
Distributed systems.
&lt;/li&gt;

&lt;li&gt;After the talk, I spent a little time updating my notes from an old org-mode
workshop to present it at the emacs user group meet up today.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Today&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;I hope to get the spectrum analyzer to use &lt;code&gt;libshairport&lt;/code&gt; and be able to play
music sent through Air play.
&lt;/li&gt;

&lt;li&gt;Spend some time talking to the emacs user group about org-mode.
&lt;/li&gt;

&lt;li&gt;If I have any time, after getting this to work, I may play around with the
dwm port.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>hackerschool</category><category>julia</category><category>orgmode</category><category>python</category><category>raspberry-pi</category><guid>http://punchagan.muse-amuse.in/posts/hacker-school-2014-07-21.html</guid><pubDate>Tue, 22 Jul 2014 14:46:29 GMT</pubDate></item><item><title>Org based posts in Nikola</title><link>http://punchagan.muse-amuse.in/posts/org-based-posts-in-nikola.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
&lt;a href="http://binchen.org/"&gt;Chen Bin&lt;/a&gt; asked me to share my Nikola+Org work-flow, and share an
example post.
&lt;/p&gt;

&lt;p&gt;
The org source for any post can be found by changing the URL of a post
from &lt;code&gt;.html&lt;/code&gt; to &lt;code&gt;.org&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
I don't have much of a work-flow, because I don't post too often, but
here is what I typically do, to make a new post.
&lt;/p&gt;

&lt;p&gt;
I start off by creating a new post using
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;new_post&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
and then give the post a title and start editing the post in Emacs.
&lt;/p&gt;

&lt;p&gt;
I have a simple snippet that lets me insert tags, based on existing
tags.
&lt;/p&gt;

&lt;script src="https://gist.github.com/6629020.js"&gt;&lt;/script&gt;

&lt;p&gt;
Once I'm happy with the content of a post, I run &lt;code&gt;nikola auto&lt;/code&gt; to
build the source and serve it locally, and see if the post "looks"
reasonable, after being rendered.
&lt;/p&gt;

&lt;p&gt;
Once, I'm happy with it, I commit the post and deploy it using &lt;code&gt;nikola
deploy&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;you&lt;/span&gt; &lt;span class="nt"&gt;may&lt;/span&gt; &lt;span class="nt"&gt;use&lt;/span&gt; &lt;span class="nt"&gt;rsync&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="s2"&gt;"rsync -rav output/* joe@my.site:/srv/www/site"&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;And&lt;/span&gt; &lt;span class="nt"&gt;then&lt;/span&gt; &lt;span class="nt"&gt;do&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;backup&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;ping&lt;/span&gt; &lt;span class="nt"&gt;pingomatic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;To&lt;/span&gt; &lt;span class="nt"&gt;do&lt;/span&gt; &lt;span class="nt"&gt;manual&lt;/span&gt; &lt;span class="nt"&gt;deployment&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;it&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="cp"&gt;[]&lt;/span&gt;
&lt;span class="nt"&gt;DEPLOY_COMMANDS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'nikola orphans|xargs rm || true'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'git checkout master'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'nikola build'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'./commit-changes || true'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'nikola github_deploy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="cp"&gt;]&lt;/span&gt;


&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;List&lt;/span&gt; &lt;span class="nt"&gt;XML-RPC&lt;/span&gt; &lt;span class="nt"&gt;services&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;preferred&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;PING_XMLRPC_SERVICES&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;HTTP&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;GET&lt;/span&gt; &lt;span class="nt"&gt;services&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;web&lt;/span&gt; &lt;span class="nt"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;PING_GET_SERVICES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;Consider&lt;/span&gt; &lt;span class="nt"&gt;adding&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nt"&gt;nikola&lt;/span&gt; &lt;span class="nt"&gt;ping&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="nt"&gt;as&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;last&lt;/span&gt; &lt;span class="nt"&gt;entry&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;DEPLOY_COMMANDS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I also have a plugin, that posts captured bookmarks and quotes onto
the blog, with a single command. I should probably make the sources of
my blog open, and push it onto GitHub.
&lt;/p&gt;</description><category>blog</category><category>nikola</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/org-based-posts-in-nikola.html</guid><pubDate>Sun, 20 Apr 2014 12:05:10 GMT</pubDate></item><item><title>Bookmarks and Quotes plugin</title><link>http://punchagan.muse-amuse.in/posts/bookmarks-and-quotes-plugin.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I used to have a separate page for bookmarks and quotes on the old
blog.  They will now be shared as regular posts with 5 or more
bookmarks/quotes.  I use a bookmarklet in my browser to capture links
to an org-file using org-capture protocol and then I have a small
plugin to Nikola, that looks at such captured bookmarks and quotes and
makes new posts out of them.  This workflow is inspired by Brett
Trepestra's &lt;a href="http://brettterpstra.com/2013/01/15/a-web-excursions-system-for-static-blogs/"&gt;web excursions&lt;/a&gt; plugin.
&lt;/p&gt;

&lt;p&gt;
The plugin is currently a part of my blog source, and not published to
Nikola's plugin repository since it is very specific to my setup.  But
if anybody is interested, I can publish the code somewhere public.
&lt;/p&gt;

&lt;p&gt;
If you are interested to get these links and bookmarks into your feed
reader, you can subscribe to their feed: &lt;a href="http://punchagan.muse-amuse.in/categories/quotes.xml"&gt;quotes&lt;/a&gt;, &lt;a href="http://punchagan.muse-amuse.in/categories/bookmarks.xml"&gt;bookmarks&lt;/a&gt;.  These
posts will also make it to the main feed, though.
&lt;/p&gt;</description><category>blog</category><category>code</category><category>nikola</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/bookmarks-and-quotes-plugin.html</guid><pubDate>Sun, 20 Oct 2013 00:26:13 GMT</pubDate></item><item><title>Blogging with Nikola and Org-mode</title><link>http://punchagan.muse-amuse.in/posts/blogging-with-nikola-and-org-mode.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Sigh! I made yet another change to the way this blog gets published.
But, I have a feeling this mechanism, is here to stay!
&lt;/p&gt;

&lt;p&gt;
We've been using Nikola quite regularly for our &lt;a href="http://ultimatesport.in"&gt;Ultimate site&lt;/a&gt;, and I
quite like it.  I've also contributed a bunch of features to Nikola to
get it to work the way I would like it to.  This weekend I ported my
blog from &lt;a href="https://github.com/renard/o-blog"&gt;o-blog&lt;/a&gt; to &lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt;.  The only thing that was stopping me
from doing it, until now is the fact that all my posts are in
org markup and porting them over to one of the formats that Nikola
supports would be a PITA.  So, I wrote a &lt;a href="http://plugins.getnikola.com/#orgmode"&gt;pretty simple plugin&lt;/a&gt; to
Nikola to support posting from org files.  And then with a &lt;a href="https://gist.github.com/punchagan/6970578"&gt;little
Python&lt;/a&gt;, I was able to move everything over to use Nikola.
&lt;/p&gt;

&lt;p&gt;
Hopefully, I'll keep my blog more updated, from here on!
&lt;/p&gt;</description><category>blog</category><category>hack</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/blogging-with-nikola-and-org-mode.html</guid><pubDate>Thu, 17 Oct 2013 02:40:47 GMT</pubDate></item><item><title>Org-mode Workshop</title><link>http://punchagan.muse-amuse.in/posts/org-mode-workshop.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Well, I'm not sure if it's worth writing about.  I conducted my
first org-mode workshop along with Prof. Venkatesh Choppella at
IIIT-Hyderabad.  It was a 3 hour demo+talk kind of a thing, with a
small audience of about 20 people, most of whom were new to
Emacs.
&lt;/p&gt;

&lt;p&gt;
We covered almost all the aspects of Org-mode after giving a brief
introduction to Emacs.  Outlining and note-taking part was simple
and easy to understand, but the audience couldn't really
appreciate the part of keeping TODO lists and agendas and other
stuff.  I'm hoping, the reason was not me taking over from
Venkatesh.
&lt;/p&gt;

&lt;p&gt;
I think the workshop should've been more hands-on and we should've
asked people to try out stuff on the spot, instead of showing off
the things possible with Emacs.  They probably would've
appreciated a few things better, that way.
&lt;/p&gt;

&lt;p&gt;
Hopefully, we will be doing more workshops on Org-mode and there
are surely somethings to take away from this one.  I hope at least
one of the participants, gets hooked to Org-mode.
&lt;/p&gt;

&lt;p&gt;
The talk outline is here.
&lt;/p&gt;</description><category>emacs</category><category>hyderabad</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/org-mode-workshop.html</guid><pubDate>Thu, 23 Jun 2011 01:04:00 GMT</pubDate></item><item><title>Git powered wikis improved: My bit</title><link>http://punchagan.muse-amuse.in/posts/git-powered-wikis-improved-my-bit.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I accidentally came across the blog-post Git-powered wikis
improved - GitHub. And this particular paragraph caught my
eye:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
The new editor has the capability to support every markup
language that GitHub Wikis support. If you're a fan of Markdown,
Textile, pod or RDoc, the function bar buttons (e.g. bold,
italic, underline, etc.) will now work. We've even written brand
new inline help for many of GitHub Wiki's supported markup
languages.
&lt;/p&gt;

&lt;p&gt;
The language definitions the editor uses are JSON-based and easy
to edit. If you'd like us to support a markup language that we
don't currently support, Gollum, GitHub's wiki software, is
entirely open source – fork our code and send us a pull request
with changes that support your choice language.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I sent a quick patch for org-mode in the function bar, and it has
been accepted.  :)
&lt;/p&gt;

&lt;p&gt;
If not anything more, I hope, at least a couple of curious people
will explore org-mode and find it useful.
&lt;/p&gt;</description><category>code</category><category>contribute</category><category>emacs</category><category>foss</category><category>git</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/git-powered-wikis-improved-my-bit.html</guid><pubDate>Fri, 04 Feb 2011 22:55:00 GMT</pubDate></item><item><title>CHAGANTI 635888 Emacs</title><link>http://punchagan.muse-amuse.in/posts/chaganti-635888-emacs.html</link><dc:creator>punchagan</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;
Puneeth Chaganti, hereby agrees as follows:
&lt;/p&gt;

&lt;p&gt;
Developer hereby agrees to assign and does hereby assign to FSF
Developer's copyright in changes and/or enhancements to the suite
of programs known as GNU EMACS, including any accompanying
documentation files and supporting files as well as the actual
program code.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Yay! I can now write code, that can go into Org-mode and Emacs!
I'm looking forward to this!
&lt;/p&gt;</description><category>contribute</category><category>emacs</category><category>fsf</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/chaganti-635888-emacs.html</guid><pubDate>Thu, 03 Feb 2011 08:46:00 GMT</pubDate></item><item><title>Changes to Blog</title><link>http://punchagan.muse-amuse.in/posts/changes-to-blog.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Well, as you can see, I've changed my blog a bit.  I had been
trying to make it gel well with org-mode and looking for ways to
allow me to share arbit stuff with separate feeds for tags,
separate pages with independent feeds, etc.
&lt;/p&gt;

&lt;p&gt;
I finally got around to tweaking the code of reprise to be able to
do this.  There are still a few things I would like to change, but
I'll make the changes gradually.  The looks are also straight from
uddigal's reprise, with a few tiny tweaks.  I hope it is alright
to be using it.  I really liked the theme.
&lt;/p&gt;

&lt;p&gt;
Every tag now has a separate feed. &lt;code&gt;/tags/emacs.atom&lt;/code&gt; will give
you the feed of &lt;code&gt;emacs&lt;/code&gt; for instance. Also, I plan to have a
couple of more pages, one for all the interesting links I come
across and another for interesting quotes.  Both of these pages,
have their own feeds too (&lt;code&gt;quotes.atom&lt;/code&gt; and &lt;code&gt;links.atom&lt;/code&gt;).
&lt;/p&gt;

&lt;p&gt;
In the spirit of minimalism, I got rid of comments.  I've been
looking for ways of having comments without all the javascript
cruft from disqus, but I didn't find any satisfactory way to do
this.  So, the site will have no comments.  You can write to me,
in case you've something to say to me.
&lt;/p&gt;

&lt;p&gt;
Adios.
&lt;/p&gt;</description><category>blog</category><category>orgmode</category><category>python</category><guid>http://punchagan.muse-amuse.in/posts/changes-to-blog.html</guid><pubDate>Thu, 03 Feb 2011 04:41:00 GMT</pubDate></item><item><title>Why I like Org as a markup</title><link>http://punchagan.muse-amuse.in/posts/why-i-like-org-as-a-markup.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Org-mode, as a mode, is obviously awesome.  The ability to move
around whole blocks of text, for re-organizing documents and the
usability of tables are just two brilliant features.
&lt;/p&gt;

&lt;p&gt;
But, the org markup itself is such a cool thing.  I've been
looking at &lt;code&gt;rst&lt;/code&gt; all day, and it's such a pain to find out where
your headings are, what level your current sub-heading is at, etc.
(I'll probably do a bit better, with some getting used to. I'm an
org-addict. ;)).  With org-mode it's so intuitive!  It's so easy
to find out, with just one quick look!  I don't think any other
markup has this coolness! Org-mode FTW!
&lt;/p&gt;</description><category>emacs</category><category>orgmode</category><category>writing</category><guid>http://punchagan.muse-amuse.in/posts/why-i-like-org-as-a-markup.html</guid><pubDate>Wed, 12 Jan 2011 23:00:00 GMT</pubDate></item><item><title>Pandoc can now do Org</title><link>http://punchagan.muse-amuse.in/posts/pandoc-can-now-do-org.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Pandoc is a haskell library and a command line tool, that can
convert markup from one to another and it does it pretty well.
Until now it supported quite a few markups, but not orgmode.  But
now, Orgmode support has been added! Yay!
&lt;/p&gt;

&lt;p&gt;
But, it can only read from other formats and write to org-mode
format.  The other way around, is not possible, but you can do
that straight from org-mode, right?
&lt;/p&gt;

&lt;p&gt;
I've often felt the need for an org-importer and hence decided to
do something about it.  I stumbled upon Pandoc, when I was moving
my blog, and found it pretty neat.  After, yet another request for
an importer, on the org-mode mailing list, I decided to look at
Pandoc.  I was somehow under the impression that it was written in
Python.  But it turned out, I had to learn Haskell!  A good excuse
to learn a new language, eh?  I brushed through a tutorial for a
couple of days (and was blown off by the paradigm of the language)
and was able to port the RST writer in Pandoc, to an Org
writer.  :)
&lt;/p&gt;

&lt;p&gt;
You can get the latest version from here
&lt;/p&gt;</description><category>emacs</category><category>haskell</category><category>orgmode</category><guid>http://punchagan.muse-amuse.in/posts/pandoc-can-now-do-org.html</guid><pubDate>Mon, 06 Dec 2010 17:52:00 GMT</pubDate></item></channel></rss>