<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Noetic Nought</title><link>https://punchagan.muse-amuse.in/</link><description>For an idle mind is the devil's workshop.</description><atom:link rel="self" href="https://punchagan.muse-amuse.in/rss.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 27 Apr 2016 03:15:21 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Deoriatal and Chandrashila</title><link>https://punchagan.muse-amuse.in/posts/deoriatal-and-chandrashila.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
It was the final day and after about 5 hours of descent through the hills on the
road, we had stopped for lunch about 100km from Haridwar. Of the 14 people who
stayed until the last day, 5 of us were in a Sumo and 9 were in a Tempo
Traveller van. We had already said our goodbyes when we got into the vehicles,
but we happened to stop at the same place for lunch – thanks to the drivers.
Daksh, a 10 year old who breezed through his first trek, came running to us from
the van and hugged Arvind who had just finished his second back to back trek
and has plans for 2 more next month. Both of them were beaming happiness. This
pretty much sums up the past 5 days in the trek! The rest of the trip was just
descending further and getting into civilization, reminiscing all the fun,
catching up with civilization and slipping back into the bustle and the noise of
normal life, with more goodbyes.
&lt;/p&gt;

&lt;p&gt;
I had been travelling for about 2 weeks before the trek, crawling up slowly from
Bangalore to Delhi, and then spent a couple of days in Mukteshwar after reading
about it somewhere on the internet. I enjoyed the calm of the hills, and the
warmth of a family with who I happened to stay with. But, I wasn't done. I
really wanted to see the beautiful night sky filled with stars, and gaze into
the distance at snow capped mountains and be overwhelmed by their grandness. I
knew I had to go further into the hills. I came back to Delhi, to get more
winter/cold wear and to go back with a better plan. I mentioned to &lt;a href="https://twitter.com/baali_"&gt;baali&lt;/a&gt; the
idea of heading off either to Kashmir or somewhere in the north-east by myself
using public transport and local help, or going on a trek with a group. He
recommended India Hikes, and helped me find a trek that fit my requirements –
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;starts as soon as possible, but isn't too long – I had to be back in
Bangalore in a week.
&lt;/li&gt;
&lt;li&gt;had opportunities to enjoy – great views of the snow capped mountains and
the night sky.
&lt;/li&gt;
&lt;li&gt;not too hard – I didn't want to spend all my time thinking about where and
how I was going to put my next step. I wanted a relaxed trek with time to
look around and take in the beauty.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
There were only a couple of treks that seemed to fit the bill. baali pushed me
and got me registered for the &lt;a href="http://indiahikes.in/deoria-tal-chandrashila-peak-trek/"&gt;Deoriatal-Chandrashila trek&lt;/a&gt;. I got my "trek
uniform" from Decathlon and packed my bags for the trek – I only had a couple
of days to do this. I was sorta nervous about all this because I really dislike
cold weather, but baali gave me loads of moral support to take the first steps.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26561742402/in/album-72157667426705882/" title="Quechua Uniform and Gear"&gt;&lt;img src="https://farm2.staticflickr.com/1493/26561742402_53644a7893_z.jpg" width="640" height="427" alt="Quechua Uniform and Gear"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
This post is an attempt to record this trek for my future self. If you'd like
detailed documentation for the trek, see &lt;a href="http://indiahikes.in/deoria-tal-chandrashila-peak-trek/#trek-details"&gt;India Hikes' documentation&lt;/a&gt;.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;The Base-camp&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I reached Haridwar in a bus from Delhi, way before the scheduled time to meet
everyone else. I walked around the town before sunrise, reached the station and
waited for trekkers to start trickling in. The base camp, Sari, was about an 8
hour ride from Haridwar, that I spent mostly sleeping – it was quite hot! Much
hotter than I expected. And I started to feel comfortable about possibly not
having enough clothing for the cold. When packing, baali and I were trying to
make a sensible trade-off between the amount of stuff I carried and not feeling
uncomfortably cold. He had the experience of one-trek and was leaning towards
the lighter-backpack side, and this being my first trek I wanted to be heavily
on the extra-clothing-for-cold side. The final state of my backpack left behind
a slight worry in the back of my mind, which kept coming to the fore from time
to time, until the bus ride.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26628444206/in/album-72157667426705882/" title="Sari village school"&gt;&lt;img src="https://farm2.staticflickr.com/1446/26628444206_bf6a964c3d_z.jpg" width="640" height="427" alt="Sari village school"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
The base camp turned out to be a small lodge sort of a thing with cozy rooms for
the trekkers and India Hikes trek leads, guides and other support staff. The
views from here weren't very different than what I could see from Mukteshwar.
There weren't really any snow peaks in our view and there was a lot of lush
green and the Sari village in view. We were received by similing faces of the
support staff and trek leads, welcoming us on the trek. The comforting
camaraderie would be a feature throughout the rest of the trek! Our group had
some people who had done treks with India Hikes before, and all the interactions
around me were giving me a good feeling of joining a great community. Everyone
other than me seemed to know everyone else, yet new people were made to feel
comfortable and I felt totally at home.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26628447826/in/album-72157667426705882/" title="Tracing the track on a map"&gt;&lt;img src="https://farm2.staticflickr.com/1654/26628447826_cda76911cd_z.jpg" width="640" height="427" alt="Tracing the track on a map"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
Kamal, our trek lead, briefed us about the trek and wished us good luck for the
trek. The thing I loved the most about the briefing was our guide Dhan Singh
explaining to us that India Hikes aims to make high altitude trekking more
generally accessible and that we should treat this trek as a learning
experience to be able to go on treks by ourselves with friends and/or family!
It was going to be 4 days of learning about all sorts of things from symptoms
of AMS and the horrors of it to using micro spikes and different walking styles
on snow &amp;amp; ice!  It was also the beginning of 4 days of listening to so many
stories of various different treks, especially &lt;a href="http://roopkund.com/"&gt;Roopkund&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Deoriatal&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
After some lovely breakfast, we packed and set out for what was going to be a
short hike up, to Deoria tal – lake created by the Gods. Beautiful meadows, a
lake and glorious views of the snow-capped mountains in the backdrop. Picture
perfect! This was exactly the kind of thing I was looking for, I thought, when I
ended up at Mukteshwar! This was just what I wanted from the trek. Apart from
the gorgeous night skies.
&lt;/p&gt;

&lt;p&gt;
This was the best part of the trek, for me. Even more than the summit.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26655256465" title="Deoriatal"&gt;&lt;img src="https://farm2.staticflickr.com/1450/26655256465_226234594b_z.jpg" width="640" height="427" alt="Deoriatal"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
The rest of the day was spent walking around the camp-site, and taking in as
much of the beauty as we could.  We walked up to a couple of view points that
gave better views of the mountains and walked around the lake, enjoying the
calmness.  We could see Chandrashila, the peak we were going to summit in 3
days from the second view point.  Also, the Rhododendron covered slopes were a
sight to watch!
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26655262305/in/album-72157667426705882/" title="Chandrashila from Deoriatal Campsite"&gt;&lt;img src="https://farm2.staticflickr.com/1699/26655262305_4ca2847f1d_z.jpg" width="640" height="427" alt="Chandrashila from Deoriatal Campsite"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
Playing Frisbee with the trekkers and cricket with cooks and other support
staff taking care of people at the camp, along with the trek lead and guides
added more physical activity that I enjoyed quite a bit.  The sport, apart from
getting to hang around with people and getting to know them, also helped me
keep myself warm, through out the day, without too much clothing.
&lt;/p&gt;

&lt;p&gt;
The camp site had a few other camps, some of whom we interacted with and others
who we didn't talk to but were spotted near all of the rest of the camps we
were going to have in the next 3 days.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26381830740/in/album-72157667426705882/" title="Selfie-Sai at Deoriatal"&gt;&lt;img src="https://farm2.staticflickr.com/1649/26381830740_a248322e63_z.jpg" width="427" height="640" alt="Selfie-Sai at Deoriatal"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
We had some story telling, singing and oxy-meter readings in the dining tent
before yet another yummy meal. My oxygen levels were good, but my pulse was
close to 90. It had come back down to 60 during the next couple of days. I
wonder if my body was still acclimatising or if it was signs of some of the
anxiousness that was going to hit me later in the night.  I went back to sleep
after fooling around with the other post dinner, till about 10 o' clock.  I
fell asleep quickly, but I started feeling extremely anxious and uneasy, to the
point of me even thinking of hiking back down to the base camp. I'm still not
sure what it was that made me so uneasy, and thankfully I didn't have the
feeling again during the rest of the trek.  I was able to ease back into sleep
with some reading.
&lt;/p&gt;

&lt;p&gt;
I would definitely think of Deoria Tal, whenever I felt the need for a calm
amidst some awe-inspiring beauty, without trekking too much.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26381862960/in/album-72157667426705882/" title="Deoriatal"&gt;&lt;img src="https://farm2.staticflickr.com/1664/26381862960_680fff5128_z.jpg" width="640" height="427" alt="Deoriatal"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Tala or Rohini Bugyal&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
We woke up to a clear sky and a serene lake that drew me to go and sit by its
side, until breakfast. We got packed up and prepared for what was going to be
the longest day, in terms of the time spent hiking and distance covered. The
hike was going to be through a forest trail, with lots of Rhododendron trees and
dozens of different bird species. This stretch of the trek also had some of the
views I liked the most.
&lt;/p&gt;

&lt;p&gt;
The hike was relaxed and we had our packed lunches after about half way through
the trek. The lunch, like all other meals, was so yummy that I regretted
carrying such a small box. Ankit, Abhirut and Shyamlee with bigger boxes,
kindly shared some of their food with me.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26561994202/in/album-72157667426705882/" title="Lunch break on the ridge"&gt;&lt;img src="https://farm2.staticflickr.com/1508/26561994202_f6f236a023_z.jpg" width="640" height="427" alt="Lunch break on the ridge"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
Near the end of the hike we bumped into Tanmoy – another Trek lead with India
hikes who was going to meet us at our next night's base camp. He was mapping
the trek route and had covered our 3 day trail in a single day. The next night
at Martoli he would tell us his story of how he got into trekking and inspire
us with them!
&lt;/p&gt;

&lt;p&gt;
The evening was a musical one. After our daily dose of Himalayan stories, it was
great to hear trek lead Kamal, sing some popular numbers with so much feeling.
Pooja and Meenakshi followed up with a deluge of songs before and during a fun
filled Antakshari session. Sai, Padmini and Sarita sang some old numbers, some
of which seemed like "home-productions" to the opposite team.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26589808721/in/album-72157667426705882/" title="Tali camp site"&gt;&lt;img src="https://farm2.staticflickr.com/1610/26589808721_49b97ec31e_z.jpg" width="640" height="427" alt="Tali camp site"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;Martoli&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
We woke up to some rain and cloudy weather. We delayed the start a little bit,
to make the trek more comfortable, since it was going to be a short trek
anyway.  The skies cleared up pretty quickly and we hiked up to Martoli through
a maze of Rhododendron trees!
&lt;/p&gt;

&lt;p&gt;
Bhrujgali was supposed to be our next camp-site but we camped a little lower,
at Martoli, because it had a more accessible water source.  We did the same at
Rohini Bugyal, the previous day, camping at Tala instead of the usual spot.
&lt;/p&gt;

&lt;p&gt;
The hike was a pretty simple one, that took about 4 hours. We stopped at a
refreshing stream on the way, where we had our lunch and took lots of photos!
The trail was a forest trail that seemed very similar to some of the trails
through the Sahyadris. One of the trekkers, Padmini, took a different trail at
a fork and we had a few anxious moments, looking around, for her. She had some
very anxious moments, but was really happy that she was brought back safely to
the group by Dhan Singh.  It may be useful for the trekkers to carry a whistle
to make it easier to seek attention in such cases, Sai mentioned.  I spent some
time during the rest of the hike walking with Padmini, chatting up and getting
know things about each others' lives.
&lt;/p&gt;

&lt;p&gt;
I decided not to click any photographs and look around more. Also, not having
much power in the battery helped enforce this decision. Batteries drain pretty
quickly in such cold weather, and I learnt that keeping the batteries in your
sleeping bag can help prevent that. I wonder why people don't carry some kind
of solar chargers, instead of carrying so many spare batteries and power
banks. Also, it may be interesting to look for devices that convert some of the
energy spent hiking into usable power.
&lt;/p&gt;

&lt;p&gt;
The evening was spent relaxing, talking and getting to hear more stories!  We
also had the company of the group who had gone to the summit on that day, and
were trying to help us with some tips from their newly gained experience! We
were taught how to use clamp-ons, micro spikes and gaiters, in case there is
snow or ice on the trail.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26655507775/in/album-72157667426705882/" title="Sunset at Martoli"&gt;&lt;img src="https://farm2.staticflickr.com/1457/26655507775_378df710e1_z.jpg" width="640" height="427" alt="Sunset at Martoli"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
It was going to be a 4am start the next day, and almost everyone hit the sacks
immediately after an early dinner. Rajesh and I, though, were struck by the
beauty of the night sky. I tried my hand at some night sky photography and got
some okay-ish shots, including one which captured a shooting star.  A wide
angle lens and a tripod would've been extremely useful.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26561731052/in/album-72157667426705882/" title="Shooting star &amp;amp; Shaky hands?"&gt;&lt;img src="https://farm2.staticflickr.com/1666/26561731052_ce3204c204_z.jpg" width="640" height="427" alt="Shooting star &amp;amp; Shaky hands?"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;Summit day&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
Activity started in the camp-site from as early as 2:30 am. Excitement was in
the air. Trek leads and guides were pushing hard to get people lined up as early
as possible, to avoid hiccups due to melting ice and snow in the trek. We
managed to get the whole group going by 4:15 am. It was going to be one of our
steepest climbs of the trek, to Bhrujgali, in the darkness. Owing to the
darkness, the two guides and the trek lead had to be helping people out, more
than usual. I ended up being the sweeper until it was dawn, with some company
from Abhirut, Ankit and Shyamlee. It was fun just screaming out to push people,
mentally. Much like cheering from the sidelines during a game of &lt;a href="https://vimeo.com/114920914#t=7m13s"&gt;Ultimate&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
It was inspiring to see people pushing themselves hard, despite their physical
problems. Asthma, cramps, come what may, lets get to the top! I hiked up with
Padmini, who was probably the eldest trekker and was slowly but steadily making
her way up. It always helps to have someone talking to you, to distract you from
your &lt;a href="http://sethgodin.typepad.com/seths_blog/2010/01/quieting-the-lizard-brain.html"&gt;lizard brain&lt;/a&gt;. She was quite happy that I walked with her all the way up.
&lt;/p&gt;

&lt;p&gt;
The bird watchers amongst us, Ajit and Anusha, were delighted by how many Monals
they spotted. The view from the top was gorgeous. Many many dozens of
photographs were taken, in various poses, and various directions. It all looked
so glorious that nobody really wanted to stop. So many snow covered peaks, all
around. Raju bhai, Dhanno bhai and Kamal bhai had a lot of work to do, telling
all of us the names of the different peaks that we could see. But, not before
the excitedly told the rest of the India Hikers that everyone in the group had
summit-ed. They were very pleased by the fact that the whole group made it
safely to the top!
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26629332506/in/album-72157667426705882/" title="Reflecting atop Chandrashila"&gt;&lt;img src="https://farm2.staticflickr.com/1628/26629332506_9d9e40f284_z.jpg" width="640" height="480" alt="Reflecting atop Chandrashila"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
On some of the previous nights, I saw some folks use apps on their phones to
help them identify stars and constellations in the night sky. Nobody seemed to
have an app that helped identify the peaks. It would be interesting to find or
build something that does this.
&lt;/p&gt;

&lt;p&gt;
The descent was much simpler and quite relaxed. 5 of the trekkers left early,
because they wanted to get to Haridwar for some more adventure and fun –
rafting and more bird/animal watching.
&lt;/p&gt;

&lt;p&gt;
The weather suddenly turned bad. It got super cloudy and the wind got really
chilly, before there was hail and snow. Everyone got into their tents for the
afternoon, and this was practically the first afternoon I spent inside the tent.
Once we got out of the tents after a couple of hours, the landscape had totally
changed. Everything above about 50m from where we were was filled with snow, and
we experienced the coldest and harshest weather of the trek. It was the first
time, I felt I had got the balance of how much cold clothing I should be
carrying wrong. I had used up all the layers of clothing I had, and yet felt a
chill when I was not inside a tent. Next time around I'll definitely erring on
the side of carrying more. The weather didn't get any better until the next
morning.
&lt;/p&gt;

&lt;p&gt;
We spent the evening in the dining tent, chatting away and playing Uno – led by
Mitali, a 10 year old who also breezed through the trek along with Dhruv who was
also 10. We stuck together the whole evening to keep ourselves warm, and the
trek was officially called to an end with certificate distribution and everyone
sharing some of their thoughts about the trek.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26629335116/in/album-72157667426705882/" title="Martoli post-snow"&gt;&lt;img src="https://farm2.staticflickr.com/1651/26629335116_a17dac37c9_z.jpg" width="640" height="480" alt="Martoli post-snow"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;The end&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;p&gt;
I got back to Delhi with the others, from Haridwar and then to Bangalore. Its
nice to be back amongst friends and family and back in familiar places. But, the
silence of the mountains does haunt you for a while.
&lt;/p&gt;

&lt;p&gt;
If I do go back up the mountains through a trekking group, you know who I'm
going to be going with! India Hikes did manage to give me that feeling of being
a part of wonderful community that is trying to make High Altitude trekking more
accessible by documenting various treks and arranging treks with excellent
support including some very delicious food.
&lt;/p&gt;

&lt;p&gt;
I've always liked the idea of "leaving a place better than you found it". India
Hikes seems to really believe in this idea, and is trying really hard to
encourage trekkers to imbibe this value and help each other in this mission. I
really hope that there's at least a handful of people in each trek, who take
back this idea along with pleasant memories from the mountains.
&lt;/p&gt;

&lt;a data-flickr-embed="true" href="https://www.flickr.com/photos/punchagan/26628697466/in/album-72157667426705882/" title="Water, cold and clear"&gt;&lt;img src="https://farm2.staticflickr.com/1684/26628697466_2c9c0dec56_z.jpg" width="640" height="427" alt="Water, cold and clear"&gt;&lt;/a&gt;&lt;script async src="//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
On the whole the trek was an amazing experience. Gach yaara! I am definitely
looking forward to go on more treks. As much as I dislike harshly cold weather,
the beauty of the mountains is just too irresistible.
&lt;/p&gt;

&lt;p&gt;
You can view more pictures of the trek &lt;a href="https://www.flickr.com/gp/punchagan/fXP8fG"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>himalaya</category><category>travel</category><category>trek</category><guid>https://punchagan.muse-amuse.in/posts/deoriatal-and-chandrashila.html</guid><pubDate>Mon, 18 Apr 2016 05:45:25 GMT</pubDate></item><item><title>Book Review: 5 Love Languages</title><link>https://punchagan.muse-amuse.in/posts/book-review-5-love-languages.html</link><dc:creator>punchagan</dc:creator><description>&lt;div class="book-figure"&gt;

    &lt;div class="book-figure-media"&gt;
        &lt;a class="book-figure-image" href="http://www.amazon.com/gp/product/080241270X" target="_blank"&gt;
            &lt;img height="150px" src="https://farm2.staticflickr.com/1656/24408821265_6f067fe523_o.jpg" alt="5 Love Languages"&gt;
        &lt;/a&gt;
    &lt;/div&gt;

    &lt;div class="book-figure-info"&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;span class="book-figure-info-label"&gt;Author &lt;/span&gt;&lt;span&gt;Gary Chapman&lt;/span&gt;&lt;/li&gt;
	    &lt;li&gt;&lt;span class="book-figure-info-label"&gt;ISBN &lt;/span&gt;&lt;span&gt;080241270X&lt;/span&gt;&lt;/li&gt;
	    &lt;li&gt;&lt;span class="book-figure-info-label"&gt;Read &lt;/span&gt;&lt;span&gt;2016-01-13&lt;/span&gt;&lt;/li&gt;
	    &lt;li&gt;&lt;span class="book-figure-info-label"&gt;Rating &lt;/span&gt;&lt;span&gt;5/5&lt;/span&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;
I first heard of this book in a discussion on relationships amongst friends
from RC.  The discussion was quite interesting and the book received more than
a couple of strong recommendations. So, I decided to pick it up.
&lt;/p&gt;

&lt;p&gt;
Very simply, the book is codified common sense explaining what Love is. Gary
Chapman, the author, started with the question "What makes you feel loved" and
found that the answers could be grouped into the following 5 categories:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Words of affirmation
&lt;/li&gt;
&lt;li&gt;Quality time
&lt;/li&gt;
&lt;li&gt;Receiving gifts
&lt;/li&gt;
&lt;li&gt;Acts of service
&lt;/li&gt;
&lt;li&gt;Physical touch,
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
which he calls the languages of love.  He also proposes that people have a
&lt;b&gt;primary&lt;/b&gt; language of love, and a failure to speak to a person in their primary
language would make them feel unloved.
&lt;/p&gt;

&lt;p&gt;
The book is filled with anecdotes to explain what each of these languages means
and how to speak them, along with practical advice and exercises to learn to
speak each of these languages.  Though the book has been written with couples
in mind, the fundamental ideas in this book can be applied to any
relationships. I feel like it has been helping me connect a few dots, ever
since I've started reading it.
&lt;/p&gt;

&lt;p&gt;
It has been totally worth my time to read this book. A highly recommended read!
&lt;/p&gt;

&lt;p&gt;
Below are some of my notes. Feel free to suggest improvements (for readability
and otherwise) on the notes.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;a href="https://farm2.staticflickr.com/1484/23781720643_a8e91c0cf8_o.jpg"&gt;&lt;img src="https://farm2.staticflickr.com/1484/23781720643_a8e91c0cf8_o.jpg" alt="23781720643_a8e91c0cf8_o.jpg"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;</description><category>blag</category><category>book</category><category>book-notes</category><category>life</category><category>love</category><guid>https://punchagan.muse-amuse.in/posts/book-review-5-love-languages.html</guid><pubDate>Tue, 12 Jan 2016 14:02:51 GMT</pubDate></item><item><title>Partial postgres db dumps for a Django app</title><link>https://punchagan.muse-amuse.in/posts/partial-postgres-db-dumps-for-a-django-app.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Off late, I have been working with a large &lt;code&gt;postgres&lt;/code&gt; database that is used by
an app built in &lt;code&gt;Django&lt;/code&gt;.  I wanted a partial dump of the database to try out
some experimental clean up scripts.  I haven't really used databases before,
and the last time I had to do this I did it in a pretty ad-hoc fashion.  This
time around, I tried to do it more methodically and to document it.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;The Django Route&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I looked around for tools that let you do this, and found &lt;a href="https://github.com/davedash/django-fixture-magic"&gt;django-fixture-magic&lt;/a&gt;.
I first tried it out on my older partial dump (10% as large as the original db)
and it turned out to be reasonably fast and worked well, after making a &lt;a href="https://github.com/davedash/django-fixture-magic/pull/35"&gt;few
changes&lt;/a&gt; to get it working with Python 3.x.  Its &lt;code&gt;kitchensink&lt;/code&gt; flag to the
&lt;code&gt;dump_object&lt;/code&gt; seemed like a promising option, but &lt;b&gt;didn't&lt;/b&gt; really seem to get all
the required tables for ManyToManyFields.  I worked around it, by getting a
dump of all the models which were related using Django's &lt;code&gt;dumpdata&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;Get a dump with objects of interest&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
The &lt;code&gt;dump_object&lt;/code&gt; command lets you run commands to select the objects that you
want to have in the dump, and that is quite a useful thing.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;python manage.py dump_object dataset.Product -k --query &lt;span class="s1"&gt;'{"subcategory_id__in": [1886, ...]}'&lt;/span&gt; &amp;gt; products.json
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Also, get a dump of related tables.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Dump of related fields&lt;/span&gt;
python manage.py dumpdata dataset.Attribute &amp;gt; attributes.json
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;Create the new empty db&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
Next, create a new database where this fixture can be loaded!
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Create the db&lt;/span&gt;
sudo su - postgres
createdb mydb

&lt;span class="c"&gt;# Create a user, if required&lt;/span&gt;
createuser -P
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-2-1" class="outline-4"&gt;
&lt;h4 id="sec-1-2-1"&gt;Grant access to the user&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-2-1"&gt;
&lt;p&gt;
In the &lt;code&gt;psql&lt;/code&gt; prompt type the following to grant the user permissions for the
database.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;mydb&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;myuser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-3" class="outline-3"&gt;
&lt;h3 id="sec-1-3"&gt;Fix settings.py and create tables for the models.&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-3"&gt;
&lt;p&gt;
Make changes to &lt;code&gt;settings.py&lt;/code&gt; to use the newly created database, and then
create the tables used by the app, and then load the data.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;python manage.py syncdb
python manage.py loaddata products.json
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-1-4" class="outline-3"&gt;
&lt;h3 id="sec-1-4"&gt;Too slow!&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-4"&gt;
&lt;p&gt;
This method worked and was reasonably fast when I was trying to get 20k rows
from a table with about 200k rows, with all the dependencies.
&lt;/p&gt;

&lt;p&gt;
But, when I tried to get a dump of about 200k rows from a table with 2M rows,
it was way too slow to be of any use.  There could've been a couple of reasons
for this, which I didn't have the time to look into, and debug.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;The web-server where the &lt;code&gt;Django&lt;/code&gt; app was running, and the &lt;code&gt;db&lt;/code&gt; server with
the &lt;code&gt;postgres&lt;/code&gt; database were on different machines in separate datacenters,
which could've been adding a significant amount of latency.
&lt;/li&gt;

&lt;li&gt;Just the size of the database being much larger could be making it slower?
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
These are things I should be looking into and learning about, when I have more
time at hand.  For now, I needed a quicker way to get a dump.  Even though the
raw SQL route was more manual, it turned out to be much quicker.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Raw SQL dump route&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;Get a dump of the interesting tables&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
First, I had to get a dump of all the tables with the data I was interested in,
one-by-one.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="ss"&gt;"dataset_product"&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;"dataset_product"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"subcategory_id"&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;319557&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;94589&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;332&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;626&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1886&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="ss"&gt;"dataset_product"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"gender_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/products.tsv'&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="ss"&gt;"dataset_photo"&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="ss"&gt;"dataset_photo"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"product_id"&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;U0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"id"&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="ss"&gt;"dataset_product"&lt;/span&gt; &lt;span class="n"&gt;U0&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"subcategory_id"&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;319557&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;94589&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;332&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;626&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1886&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;U0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="ss"&gt;"gender_id"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/photos.tsv'&lt;/span&gt;

&lt;span class="c1"&gt;-- Copy a bunch of other tables!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;Load the data from the dumps&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- syncdb&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;dataset_product&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/products.tsv'&lt;/span&gt; &lt;span class="k"&gt;ENCODING&lt;/span&gt; &lt;span class="s1"&gt;'UTF8'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;dataset_photo&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/photos.tsv'&lt;/span&gt; &lt;span class="k"&gt;ENCODING&lt;/span&gt; &lt;span class="s1"&gt;'UTF8'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- Copy a bunch of other tables!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;Make tables writable&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;p&gt;
Some of the tables did not let me write anything to them, until I &lt;a href="http://centoshowtos.org/web-services/django-and-postgres-duplicate-key/"&gt;altered the
sequence&lt;/a&gt; for these tables.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;Automating&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;p&gt;
It would be pretty nice if all of this was automated – allow a user to enter
exactly the same kind of a query that &lt;code&gt;django-fixture-magic&lt;/code&gt; lets you run, and
figure out the SQL copies that need to be done to get the requested dump. Its
something that currently would qualify as yak-shaving, but may be a handy thing
to have. Someone somewhere possibly already has something that does this.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>blag</category><category>django</category><category>postgres</category><category>sql</category><guid>https://punchagan.muse-amuse.in/posts/partial-postgres-db-dumps-for-a-django-app.html</guid><pubDate>Sun, 10 Jan 2016 00:09:18 GMT</pubDate></item><item><title>Clock in and get-shit-done</title><link>https://punchagan.muse-amuse.in/posts/clock-in-and-get-shit-done.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I had &lt;a href="https://punchagan.muse-amuse.in/posts/simple-org-clock-and-gnomepidgin-integration.html"&gt;setup&lt;/a&gt; a couple of hooks about an year ago that turn off all notifications
while I'm clocking in. But, I find myself switching to the browser and jumping
to twitter, out of habit.  I've tried &lt;a href="https://github.com/leftnode/get-shit-done"&gt;get-shit-done&lt;/a&gt; in the past to help myself
break this habit. But enabling get-shit-done manually is step that quickly
became a non-habit.
&lt;/p&gt;

&lt;p&gt;
So, I hooked up get-shit-done into an &lt;code&gt;org-clock-in-hook&lt;/code&gt;.  The snippet below
is what I added into a function that is added to this hook.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;with-temp-buffer&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cd&lt;/span&gt; &lt;span class="s"&gt;"/sudo::/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"HOME=/home/punchagan get-shit-done work"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;get-shit-done&lt;/code&gt; needs to be run as &lt;code&gt;root&lt;/code&gt;, since it does things like modifying
&lt;code&gt;/etc/hosts&lt;/code&gt; and restarting networking.  Just calling &lt;code&gt;get-shit-done&lt;/code&gt; as a
shell command fails with the error &lt;code&gt;sudo: no tty present and no askpass program
specified&lt;/code&gt;.  I found a couple of ways to fix this. The snippet above
piggy-backs on tramp to allow for a way to enter the password for &lt;code&gt;sudo&lt;/code&gt; to
use. This also means that I don't need to enter the password, as long as the
tramp connection is alive.
&lt;/p&gt;

&lt;p&gt;
For someone worried about having such an easy way of running something as
&lt;code&gt;root&lt;/code&gt;, using something like &lt;code&gt;gnome-ssh-askpass&lt;/code&gt; as the askpass program might
work better.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command&lt;/span&gt; &lt;span class="s"&gt;"SUDO_ASKPASS=\"/usr/lib/openssh/gnome-ssh-askpass\" get-shit-done work"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>blag</category><category>emacs</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/clock-in-and-get-shit-done.html</guid><pubDate>Tue, 22 Dec 2015 14:17:04 GMT</pubDate></item><item><title>Elfeed hook to fetch full content</title><link>https://punchagan.muse-amuse.in/posts/elfeed-hook-to-fetch-full-content.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I have started to use &lt;a href="http://pinboard.in"&gt;Pinboard&lt;/a&gt;'s &lt;code&gt;unread&lt;/code&gt; tag as my to-read list.  It has a
bookmark-let that works pretty well for adding stuff into my "to-read" list.  I
then catch up on this list using &lt;code&gt;elfeed&lt;/code&gt; and subscribing to the unread items'
RSS feed.  The work-flow is pretty nice for adding stuff into the list, and
finding items on the list. But, when it comes to the actual reading part, the
entries in the feed don't have the actual content I want to read, and I end up
opening the links in a browser.
&lt;/p&gt;

&lt;p&gt;
Inspired by a &lt;a href="https://github.com/sursh/blaggregator/pull/80#issuecomment-165849126"&gt;comment from FiloSottile&lt;/a&gt;, I realized it should be pretty easy to
setup a hook that fetches the actual content to make my reading work-flow
smoother. I wrote a &lt;a href="https://github.com/punchagan/dot-files/blob/master/bin/get_article.py"&gt;small script&lt;/a&gt;, using &lt;a href="https://github.com/buriy/python-readability"&gt;python-readability&lt;/a&gt;, to fetch the page
content, given a URL. This script is then hooked onto &lt;code&gt;elfeed-new-entry-hook&lt;/code&gt;,
to fetch content of for new entries as they are fetched.  All the old entries
can be easily fixed with a single call to &lt;code&gt;elfeed-apply-hooks-now&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/get-url-content&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"Fetches the content for a url."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command-to-string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"~/bin/get_article.py %s"&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/get-entry-content&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"Fetches content for pinboard entries that are not tweets."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="nv"&gt;elfeed-show-entry&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-entry-link&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;feed-id&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-deref&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-entry-feed-id&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-deref&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-entry-content&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s-matches?&lt;/span&gt; &lt;span class="s"&gt;"feeds.pinboard.in/"&lt;/span&gt; &lt;span class="nv"&gt;feed-id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s-matches?&lt;/span&gt; &lt;span class="s"&gt;"twitter.com/\\|pdf$\\|png$\\|jpg$"&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string-equal&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pc/get-url-content&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-entry-content&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;elfeed-ref&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'elfeed-new-entry-hook&lt;/span&gt; &lt;span class="nf"&gt;#'&lt;/span&gt;&lt;span class="nv"&gt;pc/get-entry-content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>blag</category><category>elfeed</category><category>emacs</category><category>hack</category><category>pinboard</category><guid>https://punchagan.muse-amuse.in/posts/elfeed-hook-to-fetch-full-content.html</guid><pubDate>Sat, 19 Dec 2015 08:12:29 GMT</pubDate></item><item><title>Say Howdy with Emacs!</title><link>https://punchagan.muse-amuse.in/posts/say-howdy-with-emacs.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Staying in touch with people is something I'm not very good at.  Since I am not
on popular (among my friends/family) networks – FB and Whatsapp – I don't
even see random updates from people, to get some sense of being in touch.
&lt;/p&gt;

&lt;p&gt;
I recently read some old posts by Sacha Chua and was inspired by how much code
she had for &lt;a href="http://sachachua.com/blog/category/geek/emacs/bbdb/"&gt;contact management&lt;/a&gt; in her old blog posts.  I was inspired by &lt;a href="http://sachachua.com/blog/2005/05/keeping-in-touch/"&gt;this
post&lt;/a&gt; in particular to try and be more meticulous about how I stay in touch with
people. Michael Fogleman &lt;a href="https://mwfogleman.github.io/posts/08-01-2015-emacs-can-keep-in-touch.html"&gt;blogged&lt;/a&gt; about his contact management work-flow using
&lt;code&gt;keepintouch&lt;/code&gt;. It seemed to do most of what I wanted, but I wanted this to be
integrated with my &lt;code&gt;org-contacts-db&lt;/code&gt; and I felt having native elisp code would
make it easier to hook up email, chat, etc. to this.
&lt;/p&gt;

&lt;p&gt;
I ended up writing a small utility called &lt;a href="https://github.com/punchagan/howdy/"&gt;howdy&lt;/a&gt; to help me keep in touch with
people. It currently has only a couple of features:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;M-x howdy&lt;/code&gt; lets me update the last contacted timestamp for a contact.
&lt;/li&gt;
&lt;li&gt;Shows me contacts that I'm out of touch in the agenda, once I add the
following snippet to an agenda file.
&lt;div class="highlight"&gt;&lt;pre&gt;* Howdy
  %%(howdy-howdy)
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I also have a few hooks to hook up jabber messages and email to update the db.
I've added them to &lt;code&gt;howdy-hooks.el&lt;/code&gt; in case anybody else wants to use them.
They can also be used as examples to write other hooks. Feel free to contribute
other hooks or suggest improvements.  The library also ships with a modest test
suite, that will hopefully make it easier for others to contribute.
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to experimenting with this over the next few weeks and
improving it. Hopefully, it'll help me keep in touch, better than I do now.
&lt;/p&gt;</description><category>blag</category><category>code</category><category>emacs</category><category>hack</category><category>howdy</category><guid>https://punchagan.muse-amuse.in/posts/say-howdy-with-emacs.html</guid><pubDate>Thu, 28 May 2015 13:09:24 GMT</pubDate></item><item><title>WiFi Channels &amp; my router's random invisibility</title><link>https://punchagan.muse-amuse.in/posts/wifi-channels-my-routers-random-invisibility.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
To update some data plan changes, I had to restart my router today.  I did so
from the (web) admin interface, from my dad's laptop. Guess what!  The router
goes invisible (to the laptop), after the restart!  Other devices were still
happily connected.
&lt;/p&gt;

&lt;p&gt;
There were a few occasions in the past when this laptop had failed to find our
home router.  The solution that worked for my dad before was to restart the
router; once, or may be a couple of times.  But, this time it didn't work.
&lt;/p&gt;

&lt;p&gt;
I had a feeling this was something to do with "Channels", but I had no idea
what was going on.
&lt;/p&gt;

&lt;p&gt;
I logged onto the router and started looking at the Wireless settings in the
hope of finding some clue, and there it was! &lt;code&gt;Wireless Channel: Auto Scan&lt;/code&gt;
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://punchagan.muse-amuse.in/images/auto-scan.jpg" alt="auto-scan.jpg"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
It was anybody's guess that some channels that the router uses weren't
supported by my dad's laptop.  The restarts &lt;b&gt;sometimes&lt;/b&gt; helped because the
router would scan for channels that it thinks would work well, and end-up using
something that the laptop's wifi card supported.
&lt;/p&gt;

&lt;p&gt;
The router only had options of channels from 1 to 13.  To see what channels a
wifi card supports, you can run the &lt;code&gt;iwlist freq&lt;/code&gt; command.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;iwlist freq
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;eth1      26 channels in total; available frequencies :
	  Channel 01 : 2.412 GHz
	  Channel 02 : 2.417 GHz
	  Channel 03 : 2.422 GHz
	  Channel 04 : 2.427 GHz
	  Channel 05 : 2.432 GHz
	  Channel 06 : 2.437 GHz
	  Channel 07 : 2.442 GHz
	  Channel 08 : 2.447 GHz
	  Channel 09 : 2.452 GHz
	  Channel 10 : 2.457 GHz
	  Channel 11 : 2.462 GHz
	  Channel 12 : 2.467 GHz
	  Channel 13 : 2.472 GHz
	  Channel 14 : 2.484 GHz
	  Channel 36 : 5.18 GHz
	  Channel 38 : 5.19 GHz
	  Channel 40 : 5.2 GHz
	  Channel 42 : 5.21 GHz
	  Channel 44 : 5.22 GHz
	  Channel 46 : 5.23 GHz
	  Channel 48 : 5.24 GHz
	  Channel 149 : 5.745 GHz
	  Channel 153 : 5.765 GHz
	  Channel 157 : 5.785 GHz
	  Channel 161 : 5.805 GHz
	  Channel 165 : 5.825 GHz
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So, the laptop's wifi card support all the channels that the router could use.
&lt;code&gt;iwlist freq&lt;/code&gt; also gives the current Channel if the device is already connected
to a router.  I ran this on my laptop and found that the router was using
&lt;code&gt;Channel 13&lt;/code&gt;.  Why the hell wouldn't this work?!  I don't know!
&lt;/p&gt;

&lt;p&gt;
I decided to set a channel manually, but how do I pick a channel?  The idea of
"Auto Scan" is to find a channel that has relatively low interference.  How do
we do this manually?  &lt;code&gt;sudo iwlist scan&lt;/code&gt; scans for all the WiFi access points
nearby and gives detailed information about them, which includes the Channel.
&lt;/p&gt;

&lt;p&gt;
It looked like most of the routers nearby used channels 1 and 6, with a few 3s
and 4s.  Assuming, most of the other routers aren't doing this "Auto Scan"
business, I set my router to always use Channel 9, and the laptop seems to be
happily connected, now!
&lt;/p&gt;</description><category>blag</category><category>debugging</category><category>hardware</category><category>howto</category><guid>https://punchagan.muse-amuse.in/posts/wifi-channels-my-routers-random-invisibility.html</guid><pubDate>Wed, 22 Apr 2015 06:18:50 GMT</pubDate></item><item><title>Playing music using mpsyt from Emacs</title><link>https://punchagan.muse-amuse.in/posts/playing-music-using-mpsyt-from-emacs.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I've started using the wonderful &lt;a href="https://github.com/np1/mps-youtube/"&gt;mpsyt&lt;/a&gt; to play any music from youtube, since
I'm not really interested in the video.  But, since I use emacs for chat/IRC, I
end up getting youtube links into emacs and opening them opens them up in my
browser. I ended up writing some &lt;code&gt;elisp&lt;/code&gt; to play the songs from within an
instance of &lt;code&gt;mpsyt&lt;/code&gt; running inside an emacs buffer.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/short-url-at-point&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Gets the short url at point.&lt;/span&gt;

&lt;span class="s"&gt;This function is required only because&lt;/span&gt;
&lt;span class="s"&gt;`thing-at-point-url-at-point' ignores urls (without a scheme)&lt;/span&gt;
&lt;span class="s"&gt;that don't start with www."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;bounds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;thing-at-point-bounds-of-url-at-point&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;bounds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt; &lt;span class="nv"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt; &lt;span class="nv"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;buffer-substring-no-properties&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car&lt;/span&gt; &lt;span class="nv"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr&lt;/span&gt; &lt;span class="nv"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/mpsyt-url&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;current-buffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;mpsyt-proc-name&lt;/span&gt; &lt;span class="s"&gt;"*mpsyt*"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;;; Start a new term with *mpsyt* if there isn't one&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unless&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;get-process&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;get-buffer&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kill-buffer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;get-buffer&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc-name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ansi-term&lt;/span&gt; &lt;span class="s"&gt;"mpsyt"&lt;/span&gt; &lt;span class="s"&gt;"mpsyt"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;;; Play given url in mpsyt&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;mpsyt-proc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;get-process&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc-name&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="c1"&gt;;; If something is already playing, stop it and play this...&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;term-send-string&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc&lt;/span&gt; &lt;span class="s"&gt;"\n\n\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;;; We wait for a bit, since looking for the prompt seems to fail, sometimes?&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sleep-for&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;term-send-string&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc&lt;/span&gt; &lt;span class="s"&gt;"\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="c1"&gt;;; Actually send the command to playurl&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;term-simple-send&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;get-process&lt;/span&gt; &lt;span class="nv"&gt;mpsyt-proc-name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"playurl %s"&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;switch-to-buffer&lt;/span&gt; &lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/mpsyt-url-at-point&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="s"&gt;"Play the URL at point using mpsyt."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url-get-url-at-point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pc/short-url-at-point&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="s"&gt;"No URL found"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"Playing %s with mpsyt"&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pc/mpsyt-url&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The current version of mpsyt crashes when run from inside emacs due to a bug in
the code to get the terminal size, which should be fixed once this &lt;a href="https://github.com/np1/mps-youtube/pull/247"&gt;patch&lt;/a&gt; is
merged.
&lt;/p&gt;

&lt;p&gt;
I would've expected &lt;code&gt;thing-at-point-url-at-point&lt;/code&gt; to be able to find urls even
when they don't have a schema, but it tries to guess the schema from urls and
fails to work when the url starts with &lt;code&gt;youtube.com&lt;/code&gt; instead of
&lt;code&gt;www.youtube.com&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
I started off using the command-line interface of &lt;code&gt;mpsyt&lt;/code&gt; by running it using
&lt;code&gt;shell-command&lt;/code&gt; or &lt;code&gt;start-process&lt;/code&gt;.  But, it seemed useful to have a buffer of
&lt;code&gt;mpsyt&lt;/code&gt; to switch to – easier to search for new music, repeating songs, etc.
Not all tasks/actions are achievable through &lt;code&gt;mpsyt&lt;/code&gt;'s command line args.
&lt;/p&gt;

&lt;p&gt;
I ended up writing more code than I thought I would have to&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="https://punchagan.muse-amuse.in/posts/playing-music-using-mpsyt-from-emacs.html#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;.  But, I'm
pretty happy with how this all works, right now.
&lt;/p&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="https://punchagan.muse-amuse.in/posts/playing-music-using-mpsyt-from-emacs.html#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
- Isn't it true, more often than not?
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>blag</category><category>emacs</category><category>mpsyt</category><category>python</category><guid>https://punchagan.muse-amuse.in/posts/playing-music-using-mpsyt-from-emacs.html</guid><pubDate>Mon, 20 Apr 2015 18:17:18 GMT</pubDate></item><item><title>org-drill for making it stick!</title><link>https://punchagan.muse-amuse.in/posts/org-drill-for-making-it-stick.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
Those who read the &lt;a href="http://punchagan.muse-amuse.in/posts/learning-to-use-org-drill.html"&gt;last&lt;/a&gt; &lt;a href="http://punchagan.muse-amuse.in/posts/learning-about-spaced-repetition-supermemo-org-drill-et-al.html"&gt;few&lt;/a&gt; &lt;a href="http://punchagan.muse-amuse.in/posts/more-input-sources-for-org-drill.html"&gt;posts&lt;/a&gt; here, would know that I have been
experimenting with &lt;a href="http://orgmode.org/worg/org-contrib/org-drill.html"&gt;org-drill&lt;/a&gt; (a spaced repetition extension to &lt;a href="http://orgmode.org/"&gt;Org mode&lt;/a&gt;).  I
have been using the system (almost) religiously for the past 2 months, and I do
find that it has helped a great deal! (in some respects).  I have also spent a
considerable amount of time trying to reduce the friction to put new stuff into
the system, and am constantly on the look out for further improvements.
&lt;/p&gt;

&lt;p&gt;
Using this system has definitely helped with retention, and I find that I can
recall quite a few things I have read a few weeks ago, that I would normally
have been unable to. Though, I can recall a lot of information, I have been
having a feeling of "fragmentation": the feeling of just retaining individual
bits/fragments of information, while losing out on actually internalizing the
knowledge; not seeing the big picture, etc.
&lt;/p&gt;

&lt;p&gt;
Wozniak (the author of super-memo) &lt;a href="http://www.supermemo.com/articles/20rules.htm"&gt;warns against&lt;/a&gt; learning without
understanding, and memorizing before actually learning stuff.  I haven't
consciously added stuff into the system that I didn't understand (when I added
it), but, later it does feel like I have lost some connections or the
understanding, and am only holding onto the fragments of information.
&lt;/p&gt;

&lt;p&gt;
The problems as explained in (read: as interpreted by me from) &lt;a href="http://www.amazon.com/Make-Stick-Science-Successful-Learning/dp/0674729013/ref=sr_1_1/188-6768042-2821103?ie=UTF8&amp;amp;qid=1421439099&amp;amp;sr=8-1&amp;amp;keywords=make+it+stick&amp;amp;pebp=1421439103302&amp;amp;peasin=674729013"&gt;Make it Stick&lt;/a&gt;
appear to be:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;The understanding (if any) at the time of adding stuff into the
spaced-repetition system is untested.  It may just be familiarity
masquerading as understanding.
&lt;/li&gt;

&lt;li&gt;The lack of any spaced repetitions for the overall concept/understanding and
actual repetitions only for individual bits doesn't help retention of the
understanding (even if there was any, in the first place).
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
To work around this, I'm going to try adding questions that test understanding,
to the system.  The Super-memo team strongly recommends keeping the drill items
small and easy to answer.  This may be helpful in keeping each drill session
short, but I would really like to add conceptual questions to the system, and
see how it goes. I hacked &lt;code&gt;org-drill&lt;/code&gt; to allow me to type out answers, before
looking at the "correct" ones.  This is an adaptation of a system that a fellow
Hacker Schooler uses, and shared.  Also, hopefully forcing myself to type out
the answer will help me get around the problem of sometimes saying "yeah I know
that", then looking at the answer only to reaffirm the feeling of familiarity,
rather than actually testing myself.  I'm still going to continue adding quick
and short questions that test "bits of information", though. But, hopefully the
additional conceptual questions are going to tie things together and help fill
in the gaps.  Lets see how this goes!
&lt;/p&gt;

&lt;p&gt;
For those interested, my hacks to &lt;code&gt;org-drill&lt;/code&gt; below.  The code is really a
hack, and welcome any suggestions on cleaning up the code.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;advice-add&lt;/span&gt; &lt;span class="ss"&gt;'org-drill-presentation-prompt&lt;/span&gt; &lt;span class="ss"&gt;:around&lt;/span&gt; &lt;span class="ss"&gt;'pc/org-drill-presentation-prompt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/org-drill-presentation-prompt&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;old-fun&lt;/span&gt; &lt;span class="k"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="nv"&gt;fmt-and-args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"A presentation prompt that allows capturing answers."&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;cb&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;current-buffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;heading&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nth&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-heading-components&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;entry-id&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-entry-get&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"ID"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;switch-to-buffer-other-window&lt;/span&gt; &lt;span class="s"&gt;"*org-capture-drill-answer*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;"# Hit C-c C-c once you are done answering!\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-insert-heading-respect-content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;insert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"Answer: %s"&lt;/span&gt; &lt;span class="nv"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-entry-put&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"QUESTION_ID"&lt;/span&gt; &lt;span class="nv"&gt;entry-id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;point-max&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;"  "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-time-stamp-inactive&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;insert&lt;/span&gt; &lt;span class="s"&gt;"\n\n  "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;not&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;equal&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ignore-errors&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;execute-kbd-macro&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;read-key-sequence&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;switch-to-buffer-other-window&lt;/span&gt; &lt;span class="nv"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt; &lt;span class="nv"&gt;old-fun&lt;/span&gt; &lt;span class="nv"&gt;fmt-and-args&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;advice-add&lt;/span&gt; &lt;span class="ss"&gt;'org-drill-reschedule&lt;/span&gt; &lt;span class="ss"&gt;:around&lt;/span&gt; &lt;span class="ss"&gt;'pc/org-drill-reschedule&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/org-drill-reschedule&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;old-fun&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"Calls the original reschedule, but also archives the answer"&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;prog1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;funcall&lt;/span&gt; &lt;span class="nv"&gt;old-fun&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;cb&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;current-buffer&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;switch-to-buffer-other-window&lt;/span&gt; &lt;span class="s"&gt;"*org-capture-drill-answer*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;pc/org-refile-to-datetree&lt;/span&gt; &lt;span class="s"&gt;"drill.org_archive"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;buffer-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;switch-to-buffer-other-window&lt;/span&gt; &lt;span class="nv"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kill-buffer&lt;/span&gt; &lt;span class="s"&gt;"*org-capture-drill-answer*"&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'org-datetree&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;pc/org-refile-to-datetree&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"Refile an entry to journal file's date-tree"&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt; &lt;span class="s"&gt;"fRefile to: "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let*&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;journal&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;expand-file-name&lt;/span&gt; &lt;span class="nv"&gt;journal&lt;/span&gt; &lt;span class="nv"&gt;org-directory&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;date-string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-entry-get&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"TIMESTAMP_IA"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-entry-get&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"TIMESTAMP"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dct&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;decode-time&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;date-string&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-time-string-to-time&lt;/span&gt; &lt;span class="nv"&gt;date-string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
			       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;current-time&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nth&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nv"&gt;dct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nth&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="nv"&gt;dct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nth&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nv"&gt;dct&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-cut-subtree&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;with-current-buffer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;find-buffer-visiting&lt;/span&gt; &lt;span class="nv"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;find-file-noselect&lt;/span&gt; &lt;span class="nv"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;save-excursion&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;org-datetree-file-entry-under&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;current-kill&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;bookmark-set&lt;/span&gt; &lt;span class="s"&gt;"org-refile-last-stored"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="s"&gt;"Refiled to %s"&lt;/span&gt; &lt;span class="nv"&gt;journal&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>blag</category><category>emacs</category><category>hack</category><category>hackerschool</category><category>learning</category><category>orgmode</category><guid>https://punchagan.muse-amuse.in/posts/org-drill-for-making-it-stick.html</guid><pubDate>Fri, 16 Jan 2015 19:36:54 GMT</pubDate></item><item><title>How I learnt to use Emacs' profiler</title><link>https://punchagan.muse-amuse.in/posts/how-i-learnt-to-use-emacs-profiler.html</link><dc:creator>punchagan</dc:creator><description>&lt;p&gt;
I learnt to use Emacs' profiler yesterday, after many hours of yak-shaving,
trying to get &lt;a href="https://github.com/novoid/Memacs"&gt;Memacs&lt;/a&gt; working.  Memacs is a &lt;a href="http://en.wikipedia.org/wiki/Memex"&gt;memory extension&lt;/a&gt; system for Emacs
written by Karl Voit, that I have been meaning to try out for a long time now.
Seeing lots of review posts at the turn of the year and watching Karl's recent
&lt;a href="http://emacslife.com/emacs-chats/chat-karl-voit.html"&gt;Emacs Chat with Sacha Chua&lt;/a&gt; pushed me to try and finally set it up.
&lt;/p&gt;

&lt;p&gt;
I started writing a &lt;a href="https://github.com/punchagan/Memacs/blob/chrome/memacs/chromium.py"&gt;module&lt;/a&gt; to create a Memacs file – an org archive file –
from my browser history.  It was pretty easy to write, and I had it spitting
out a huge file with 22k entries after about a couple of hours of work.  Then I
excitedly pulled up my agenda, and turned on the option to view archived
entries, only to be super-disappointed.  It turned out to be extremely slow!
Actually, the agenda never came up with the 22k entries file that I had. At
least not in 5 or so minutes, before I got impatient.  The performance was
unacceptable even when I reduced it to 5k entries.
&lt;/p&gt;

&lt;p&gt;
I was pretty sure it wasn't that slow for Karl in his &lt;a href="https://www.youtube.com/watch?v=SaKPr4J0K2I#t=999"&gt;demo&lt;/a&gt; and &lt;a href="https://twitter.com/punchagan/status/550723377871065088"&gt;tweeted&lt;/a&gt; to him,
asking for a workaround. Meanwhile, I looked at his dot-emacs, but wasn't able
to dig out what was needed to speed up things. He confirmed that his
performance was way better than what I was getting.
&lt;/p&gt;

&lt;p&gt;
First, I ruled out the possibility of it being because of the SSD, since
clearly my CPU usage was peaking, and the task was CPU bound and not I/O.
Next, I tried using the same file on a different machine (with a different
version of Emacs and org-mode), and it worked blazingly fast.  So, it was
either the version of Emacs or org-mode that I was using.
&lt;/p&gt;

&lt;p&gt;
I should have stopped, thought clearly, and started experimenting with org
version, but hindsight is 20-20.  I tried Ubuntu's pre-built Emacs and agendas
were fast!  I suspected my Emacs build, since I recently started building Emacs
from git.  I built two or three other versions of Emacs, and wasted a lot of
time, before realizing that I wasn't using the org-mode source bundled inside
Emacs for the tests, and there were two "independent" variables.
&lt;/p&gt;

&lt;p&gt;
Finally, I began bisecting org-mode's source and found that all hell broke
loose with an &lt;a href="http://orgmode.org/w/?p=org-mode.git;a=commitdiff;h=b88c5464db2cb0d90d4f30e43b5e08d2b1c1fcea;hp=8cc4e09950594b2abec2502e9218318570595ac5"&gt;inconspicuous change&lt;/a&gt; around release 8.2.6.  It turns out that
org-overview was broken before this, and collapsing all the trees in a newly
opened org-buffer (default option) wasn't working. Once this bug was fixed,
opening huge org files would slow down by a great deal, in turn causing agenda
generation to be unbearably slow.
&lt;/p&gt;

&lt;p&gt;
All I had to do was add a &lt;code&gt;#+STARTUP: showeverything&lt;/code&gt; to the top of the file.
This speeded up things by about 50 times!  It turns out, I later found out,
that all of this is documented on &lt;a href="http://orgmode.org/worg/agenda-optimization.html"&gt;Worg&lt;/a&gt;. I did try a few search engine queries,
but sadly none of them brought this up.  Adding the following to my config,
speeded up agenda generation by about 150-200 times!
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-inhibit-startup&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; ~50x speedup&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-use-tag-inheritance&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; 3-4x speedup&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
In the course of all this debugging, I learnt how to use Emacs' profiler.  The
profile reports along with git bisect, eventually helped me figure out what the
problem was.
&lt;/p&gt;

&lt;p&gt;
To profile the CPU usage, all you have to do is add a call like
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;profiler-start&lt;/span&gt; &lt;span class="ss"&gt;'cpu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;;; or M-x profiler-start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
at the place where you wish to start it.  Emacs will then start collecting
information about where time is being spent, by sampling every
&lt;code&gt;sampling-interval&lt;/code&gt; seconds (default 10&lt;sup&gt;6&lt;/sup&gt; nanoseconds = 1 milli second).
&lt;/p&gt;

&lt;p&gt;
You can view the information being collected, at any point of time using
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;profiler-report&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; or M-x profiler-report&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The report is a nice, interactive tree with the percentage of time spent in
each call. You can stop profiling by calling &lt;code&gt;(profiler-stop)&lt;/code&gt;.  If you have
more than one report, you can compare them by hitting &lt;code&gt;=&lt;/code&gt; in one of the report
buffers.  I'm definitely going to use this for other things! (like speeding up
my startup?)
&lt;/p&gt;

&lt;p&gt;
Now that I have Memacs working with reasonably fast agenda views, I'm looking
forward to collecting as much personal information as I can!  Thanks Karl for
writing Memacs.  I am going to be a pretty heavy user, I think!  There seem to
be a few rough edges, though, and I hope to help smoothen them out a little
bit, over the next few weeks.
&lt;/p&gt;</description><category>emacs</category><category>orgmode</category><category>programming</category><guid>https://punchagan.muse-amuse.in/posts/how-i-learnt-to-use-emacs-profiler.html</guid><pubDate>Fri, 02 Jan 2015 20:31:17 GMT</pubDate></item></channel></rss>